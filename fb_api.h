/* This file was autogenerated by cloop - Cross Language Object Oriented Programming */

#ifndef FB_OOAPI_H
#define FB_OOAPI_H

#include <stdint.h>
#include <ibase.h>

#ifndef CLOOP_EXTERN_C
#ifdef __cplusplus
#define CLOOP_EXTERN_C extern "C"
#else
#define CLOOP_EXTERN_C
#endif
#endif


struct fb_Versioned;
struct fb_ReferenceCounted;
struct fb_Disposable;
struct fb_Status;
struct fb_Master;
struct fb_PluginBase;
struct fb_PluginSet;
struct fb_ConfigEntry;
struct fb_Config;
struct fb_FirebirdConf;
struct fb_PluginConfig;
struct fb_PluginFactory;
struct fb_PluginModule;
struct fb_PluginManager;
struct fb_CryptKey;
struct fb_ConfigManager;
struct fb_EventCallback;
struct fb_Blob;
struct fb_Transaction;
struct fb_MessageMetadata;
struct fb_MetadataBuilder;
struct fb_ResultSet;
struct fb_Statement;
struct fb_Batch;
struct fb_BatchCompletionState;
struct fb_Replicator;
struct fb_Request;
struct fb_Events;
struct fb_Attachment;
struct fb_Service;
struct fb_Provider;
struct fb_DtcStart;
struct fb_Dtc;
struct fb_Auth;
struct fb_Writer;
struct fb_ServerBlock;
struct fb_ClientBlock;
struct fb_Server;
struct fb_Client;
struct fb_UserField;
struct fb_CharUserField;
struct fb_IntUserField;
struct fb_User;
struct fb_ListUsers;
struct fb_LogonInfo;
struct fb_Management;
struct fb_AuthBlock;
struct fb_WireCryptPlugin;
struct fb_CryptKeyCallback;
struct fb_KeyHolderPlugin;
struct fb_DbCryptInfo;
struct fb_DbCryptPlugin;
struct fb_ExternalContext;
struct fb_ExternalResultSet;
struct fb_ExternalFunction;
struct fb_ExternalProcedure;
struct fb_ExternalTrigger;
struct fb_RoutineMetadata;
struct fb_ExternalEngine;
struct fb_Timer;
struct fb_TimerControl;
struct fb_VersionCallback;
struct fb_Util;
struct fb_OffsetsCallback;
struct fb_XpbBuilder;
struct fb_TraceConnection;
struct fb_TraceDatabaseConnection;
struct fb_TraceTransaction;
struct fb_TraceParams;
struct fb_TraceStatement;
struct fb_TraceSQLStatement;
struct fb_TraceBLRStatement;
struct fb_TraceDYNRequest;
struct fb_TraceContextVariable;
struct fb_TraceProcedure;
struct fb_TraceFunction;
struct fb_TraceTrigger;
struct fb_TraceServiceConnection;
struct fb_TraceStatusVector;
struct fb_TraceSweepInfo;
struct fb_TraceLogWriter;
struct fb_TraceInitInfo;
struct fb_TracePlugin;
struct fb_TraceFactory;
struct fb_UdrFunctionFactory;
struct fb_UdrProcedureFactory;
struct fb_UdrTriggerFactory;
struct fb_UdrPlugin;
struct fb_DecFloat16;
struct fb_DecFloat34;
struct fb_Int128;
struct fb_ReplicatedField;
struct fb_ReplicatedRecord;
struct fb_ReplicatedTransaction;
struct fb_ReplicatedSession;
struct fb_ProfilerPlugin;
struct fb_ProfilerSession;
struct fb_ProfilerStats;


#define fb_Versioned_VERSION 1

struct fb_Versioned;

struct fb_VersionedVTable
{
	void* cloopDummy[1];
	uintptr_t version;
};

struct fb_Versioned
{
	void* cloopDummy[1];
	struct fb_VersionedVTable* vtable;
};


#define fb_ReferenceCounted_VERSION 2

struct fb_ReferenceCounted;

struct fb_ReferenceCountedVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_ReferenceCounted* self);
	int (*release)(struct fb_ReferenceCounted* self);
};

struct fb_ReferenceCounted
{
	void* cloopDummy[1];
	struct fb_ReferenceCountedVTable* vtable;
};

CLOOP_EXTERN_C void fb_ReferenceCounted_addRef(struct fb_ReferenceCounted* self);
CLOOP_EXTERN_C int fb_ReferenceCounted_release(struct fb_ReferenceCounted* self);

#define fb_Disposable_VERSION 2

struct fb_Disposable;

struct fb_DisposableVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_Disposable* self);
};

struct fb_Disposable
{
	void* cloopDummy[1];
	struct fb_DisposableVTable* vtable;
};

CLOOP_EXTERN_C void fb_Disposable_dispose(struct fb_Disposable* self);

#define fb_Status_VERSION 3

#define fb_Status_STATE_WARNINGS ((unsigned) (0x1))
#define fb_Status_STATE_ERRORS ((unsigned) (0x2))
#define fb_Status_RESULT_ERROR ((int) (-1))
#define fb_Status_RESULT_OK ((int) (0))
#define fb_Status_RESULT_NO_DATA ((int) (1))
#define fb_Status_RESULT_SEGMENT ((int) (2))

struct fb_Status;

struct fb_StatusVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_Status* self);
	void (*init)(struct fb_Status* self);
	unsigned (*getState)(const struct fb_Status* self);
	void (*setErrors2)(struct fb_Status* self, unsigned length, const intptr_t* value);
	void (*setWarnings2)(struct fb_Status* self, unsigned length, const intptr_t* value);
	void (*setErrors)(struct fb_Status* self, const intptr_t* value);
	void (*setWarnings)(struct fb_Status* self, const intptr_t* value);
	const intptr_t* (*getErrors)(const struct fb_Status* self);
	const intptr_t* (*getWarnings)(const struct fb_Status* self);
	struct fb_Status* (*clone)(const struct fb_Status* self);
};

struct fb_Status
{
	void* cloopDummy[1];
	struct fb_StatusVTable* vtable;
};

CLOOP_EXTERN_C void fb_Status_dispose(struct fb_Status* self);
CLOOP_EXTERN_C void fb_Status_init(struct fb_Status* self);
CLOOP_EXTERN_C unsigned fb_Status_getState(const struct fb_Status* self);
CLOOP_EXTERN_C void fb_Status_setErrors2(struct fb_Status* self, unsigned length, const intptr_t* value);
CLOOP_EXTERN_C void fb_Status_setWarnings2(struct fb_Status* self, unsigned length, const intptr_t* value);
CLOOP_EXTERN_C void fb_Status_setErrors(struct fb_Status* self, const intptr_t* value);
CLOOP_EXTERN_C void fb_Status_setWarnings(struct fb_Status* self, const intptr_t* value);
CLOOP_EXTERN_C const intptr_t* fb_Status_getErrors(const struct fb_Status* self);
CLOOP_EXTERN_C const intptr_t* fb_Status_getWarnings(const struct fb_Status* self);
CLOOP_EXTERN_C struct fb_Status* fb_Status_clone(const struct fb_Status* self);

#define fb_Master_VERSION 2

struct fb_Master;

struct fb_MasterVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct fb_Status* (*getStatus)(struct fb_Master* self);
	struct fb_Provider* (*getDispatcher)(struct fb_Master* self);
	struct fb_PluginManager* (*getPluginManager)(struct fb_Master* self);
	struct fb_TimerControl* (*getTimerControl)(struct fb_Master* self);
	struct fb_Dtc* (*getDtc)(struct fb_Master* self);
	struct fb_Attachment* (*registerAttachment)(struct fb_Master* self, struct fb_Provider* provider, struct fb_Attachment* attachment);
	struct fb_Transaction* (*registerTransaction)(struct fb_Master* self, struct fb_Attachment* attachment, struct fb_Transaction* transaction);
	struct fb_MetadataBuilder* (*getMetadataBuilder)(struct fb_Master* self, struct fb_Status* status, unsigned fieldCount);
	int (*serverMode)(struct fb_Master* self, int mode);
	struct fb_Util* (*getUtilInterface)(struct fb_Master* self);
	struct fb_ConfigManager* (*getConfigManager)(struct fb_Master* self);
	FB_BOOLEAN (*getProcessExiting)(struct fb_Master* self);
};

struct fb_Master
{
	void* cloopDummy[1];
	struct fb_MasterVTable* vtable;
};

CLOOP_EXTERN_C struct fb_Status* fb_Master_getStatus(struct fb_Master* self);
CLOOP_EXTERN_C struct fb_Provider* fb_Master_getDispatcher(struct fb_Master* self);
CLOOP_EXTERN_C struct fb_PluginManager* fb_Master_getPluginManager(struct fb_Master* self);
CLOOP_EXTERN_C struct fb_TimerControl* fb_Master_getTimerControl(struct fb_Master* self);
CLOOP_EXTERN_C struct fb_Dtc* fb_Master_getDtc(struct fb_Master* self);
CLOOP_EXTERN_C struct fb_Attachment* fb_Master_registerAttachment(struct fb_Master* self, struct fb_Provider* provider, struct fb_Attachment* attachment);
CLOOP_EXTERN_C struct fb_Transaction* fb_Master_registerTransaction(struct fb_Master* self, struct fb_Attachment* attachment, struct fb_Transaction* transaction);
CLOOP_EXTERN_C struct fb_MetadataBuilder* fb_Master_getMetadataBuilder(struct fb_Master* self, struct fb_Status* status, unsigned fieldCount);
CLOOP_EXTERN_C int fb_Master_serverMode(struct fb_Master* self, int mode);
CLOOP_EXTERN_C struct fb_Util* fb_Master_getUtilInterface(struct fb_Master* self);
CLOOP_EXTERN_C struct fb_ConfigManager* fb_Master_getConfigManager(struct fb_Master* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_Master_getProcessExiting(struct fb_Master* self);

#define fb_PluginBase_VERSION 3

struct fb_PluginBase;

struct fb_PluginBaseVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_PluginBase* self);
	int (*release)(struct fb_PluginBase* self);
	void (*setOwner)(struct fb_PluginBase* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_PluginBase* self);
};

struct fb_PluginBase
{
	void* cloopDummy[1];
	struct fb_PluginBaseVTable* vtable;
};

CLOOP_EXTERN_C void fb_PluginBase_addRef(struct fb_PluginBase* self);
CLOOP_EXTERN_C int fb_PluginBase_release(struct fb_PluginBase* self);
CLOOP_EXTERN_C void fb_PluginBase_setOwner(struct fb_PluginBase* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_PluginBase_getOwner(struct fb_PluginBase* self);

#define fb_PluginSet_VERSION 3

struct fb_PluginSet;

struct fb_PluginSetVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_PluginSet* self);
	int (*release)(struct fb_PluginSet* self);
	const char* (*getName)(const struct fb_PluginSet* self);
	const char* (*getModuleName)(const struct fb_PluginSet* self);
	struct fb_PluginBase* (*getPlugin)(struct fb_PluginSet* self, struct fb_Status* status);
	void (*next)(struct fb_PluginSet* self, struct fb_Status* status);
	void (*set)(struct fb_PluginSet* self, struct fb_Status* status, const char* s);
};

struct fb_PluginSet
{
	void* cloopDummy[1];
	struct fb_PluginSetVTable* vtable;
};

CLOOP_EXTERN_C void fb_PluginSet_addRef(struct fb_PluginSet* self);
CLOOP_EXTERN_C int fb_PluginSet_release(struct fb_PluginSet* self);
CLOOP_EXTERN_C const char* fb_PluginSet_getName(const struct fb_PluginSet* self);
CLOOP_EXTERN_C const char* fb_PluginSet_getModuleName(const struct fb_PluginSet* self);
CLOOP_EXTERN_C struct fb_PluginBase* fb_PluginSet_getPlugin(struct fb_PluginSet* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_PluginSet_next(struct fb_PluginSet* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_PluginSet_set(struct fb_PluginSet* self, struct fb_Status* status, const char* s);

#define fb_ConfigEntry_VERSION 3

struct fb_ConfigEntry;

struct fb_ConfigEntryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_ConfigEntry* self);
	int (*release)(struct fb_ConfigEntry* self);
	const char* (*getName)(struct fb_ConfigEntry* self);
	const char* (*getValue)(struct fb_ConfigEntry* self);
	ISC_INT64 (*getIntValue)(struct fb_ConfigEntry* self);
	FB_BOOLEAN (*getBoolValue)(struct fb_ConfigEntry* self);
	struct fb_Config* (*getSubConfig)(struct fb_ConfigEntry* self, struct fb_Status* status);
};

struct fb_ConfigEntry
{
	void* cloopDummy[1];
	struct fb_ConfigEntryVTable* vtable;
};

CLOOP_EXTERN_C void fb_ConfigEntry_addRef(struct fb_ConfigEntry* self);
CLOOP_EXTERN_C int fb_ConfigEntry_release(struct fb_ConfigEntry* self);
CLOOP_EXTERN_C const char* fb_ConfigEntry_getName(struct fb_ConfigEntry* self);
CLOOP_EXTERN_C const char* fb_ConfigEntry_getValue(struct fb_ConfigEntry* self);
CLOOP_EXTERN_C ISC_INT64 fb_ConfigEntry_getIntValue(struct fb_ConfigEntry* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_ConfigEntry_getBoolValue(struct fb_ConfigEntry* self);
CLOOP_EXTERN_C struct fb_Config* fb_ConfigEntry_getSubConfig(struct fb_ConfigEntry* self, struct fb_Status* status);

#define fb_Config_VERSION 3

struct fb_Config;

struct fb_ConfigVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Config* self);
	int (*release)(struct fb_Config* self);
	struct fb_ConfigEntry* (*find)(struct fb_Config* self, struct fb_Status* status, const char* name);
	struct fb_ConfigEntry* (*findValue)(struct fb_Config* self, struct fb_Status* status, const char* name, const char* value);
	struct fb_ConfigEntry* (*findPos)(struct fb_Config* self, struct fb_Status* status, const char* name, unsigned pos);
};

struct fb_Config
{
	void* cloopDummy[1];
	struct fb_ConfigVTable* vtable;
};

CLOOP_EXTERN_C void fb_Config_addRef(struct fb_Config* self);
CLOOP_EXTERN_C int fb_Config_release(struct fb_Config* self);
CLOOP_EXTERN_C struct fb_ConfigEntry* fb_Config_find(struct fb_Config* self, struct fb_Status* status, const char* name);
CLOOP_EXTERN_C struct fb_ConfigEntry* fb_Config_findValue(struct fb_Config* self, struct fb_Status* status, const char* name, const char* value);
CLOOP_EXTERN_C struct fb_ConfigEntry* fb_Config_findPos(struct fb_Config* self, struct fb_Status* status, const char* name, unsigned pos);

#define fb_FirebirdConf_VERSION 4

struct fb_FirebirdConf;

struct fb_FirebirdConfVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_FirebirdConf* self);
	int (*release)(struct fb_FirebirdConf* self);
	unsigned (*getKey)(struct fb_FirebirdConf* self, const char* name);
	ISC_INT64 (*asInteger)(struct fb_FirebirdConf* self, unsigned key);
	const char* (*asString)(struct fb_FirebirdConf* self, unsigned key);
	FB_BOOLEAN (*asBoolean)(struct fb_FirebirdConf* self, unsigned key);
	unsigned (*getVersion)(struct fb_FirebirdConf* self, struct fb_Status* status);
};

struct fb_FirebirdConf
{
	void* cloopDummy[1];
	struct fb_FirebirdConfVTable* vtable;
};

CLOOP_EXTERN_C void fb_FirebirdConf_addRef(struct fb_FirebirdConf* self);
CLOOP_EXTERN_C int fb_FirebirdConf_release(struct fb_FirebirdConf* self);
CLOOP_EXTERN_C unsigned fb_FirebirdConf_getKey(struct fb_FirebirdConf* self, const char* name);
CLOOP_EXTERN_C ISC_INT64 fb_FirebirdConf_asInteger(struct fb_FirebirdConf* self, unsigned key);
CLOOP_EXTERN_C const char* fb_FirebirdConf_asString(struct fb_FirebirdConf* self, unsigned key);
CLOOP_EXTERN_C FB_BOOLEAN fb_FirebirdConf_asBoolean(struct fb_FirebirdConf* self, unsigned key);
CLOOP_EXTERN_C unsigned fb_FirebirdConf_getVersion(struct fb_FirebirdConf* self, struct fb_Status* status);

#define fb_PluginConfig_VERSION 3

struct fb_PluginConfig;

struct fb_PluginConfigVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_PluginConfig* self);
	int (*release)(struct fb_PluginConfig* self);
	const char* (*getConfigFileName)(struct fb_PluginConfig* self);
	struct fb_Config* (*getDefaultConfig)(struct fb_PluginConfig* self, struct fb_Status* status);
	struct fb_FirebirdConf* (*getFirebirdConf)(struct fb_PluginConfig* self, struct fb_Status* status);
	void (*setReleaseDelay)(struct fb_PluginConfig* self, struct fb_Status* status, ISC_UINT64 microSeconds);
};

struct fb_PluginConfig
{
	void* cloopDummy[1];
	struct fb_PluginConfigVTable* vtable;
};

CLOOP_EXTERN_C void fb_PluginConfig_addRef(struct fb_PluginConfig* self);
CLOOP_EXTERN_C int fb_PluginConfig_release(struct fb_PluginConfig* self);
CLOOP_EXTERN_C const char* fb_PluginConfig_getConfigFileName(struct fb_PluginConfig* self);
CLOOP_EXTERN_C struct fb_Config* fb_PluginConfig_getDefaultConfig(struct fb_PluginConfig* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_FirebirdConf* fb_PluginConfig_getFirebirdConf(struct fb_PluginConfig* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_PluginConfig_setReleaseDelay(struct fb_PluginConfig* self, struct fb_Status* status, ISC_UINT64 microSeconds);

#define fb_PluginFactory_VERSION 2

struct fb_PluginFactory;

struct fb_PluginFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct fb_PluginBase* (*createPlugin)(struct fb_PluginFactory* self, struct fb_Status* status, struct fb_PluginConfig* factoryParameter);
};

struct fb_PluginFactory
{
	void* cloopDummy[1];
	struct fb_PluginFactoryVTable* vtable;
};

CLOOP_EXTERN_C struct fb_PluginBase* fb_PluginFactory_createPlugin(struct fb_PluginFactory* self, struct fb_Status* status, struct fb_PluginConfig* factoryParameter);

#define fb_PluginModule_VERSION 3

struct fb_PluginModule;

struct fb_PluginModuleVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*doClean)(struct fb_PluginModule* self);
	void (*threadDetach)(struct fb_PluginModule* self);
};

struct fb_PluginModule
{
	void* cloopDummy[1];
	struct fb_PluginModuleVTable* vtable;
};

CLOOP_EXTERN_C void fb_PluginModule_doClean(struct fb_PluginModule* self);
CLOOP_EXTERN_C void fb_PluginModule_threadDetach(struct fb_PluginModule* self);

#define fb_PluginManager_VERSION 2

#define fb_PluginManager_TYPE_PROVIDER ((unsigned) (1))
#define fb_PluginManager_TYPE_FIRST_NON_LIB ((unsigned) (2))
#define fb_PluginManager_TYPE_AUTH_SERVER ((unsigned) (3))
#define fb_PluginManager_TYPE_AUTH_CLIENT ((unsigned) (4))
#define fb_PluginManager_TYPE_AUTH_USER_MANAGEMENT ((unsigned) (5))
#define fb_PluginManager_TYPE_EXTERNAL_ENGINE ((unsigned) (6))
#define fb_PluginManager_TYPE_TRACE ((unsigned) (7))
#define fb_PluginManager_TYPE_WIRE_CRYPT ((unsigned) (8))
#define fb_PluginManager_TYPE_DB_CRYPT ((unsigned) (9))
#define fb_PluginManager_TYPE_KEY_HOLDER ((unsigned) (10))
#define fb_PluginManager_TYPE_REPLICATOR ((unsigned) (11))
#define fb_PluginManager_TYPE_PROFILER ((unsigned) (12))
#define fb_PluginManager_TYPE_COUNT ((unsigned) (13))

struct fb_PluginManager;

struct fb_PluginManagerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*registerPluginFactory)(struct fb_PluginManager* self, unsigned pluginType, const char* defaultName, struct fb_PluginFactory* factory);
	void (*registerModule)(struct fb_PluginManager* self, struct fb_PluginModule* cleanup);
	void (*unregisterModule)(struct fb_PluginManager* self, struct fb_PluginModule* cleanup);
	struct fb_PluginSet* (*getPlugins)(struct fb_PluginManager* self, struct fb_Status* status, unsigned pluginType, const char* namesList, struct fb_FirebirdConf* firebirdConf);
	struct fb_Config* (*getConfig)(struct fb_PluginManager* self, struct fb_Status* status, const char* filename);
	void (*releasePlugin)(struct fb_PluginManager* self, struct fb_PluginBase* plugin);
};

struct fb_PluginManager
{
	void* cloopDummy[1];
	struct fb_PluginManagerVTable* vtable;
};

CLOOP_EXTERN_C void fb_PluginManager_registerPluginFactory(struct fb_PluginManager* self, unsigned pluginType, const char* defaultName, struct fb_PluginFactory* factory);
CLOOP_EXTERN_C void fb_PluginManager_registerModule(struct fb_PluginManager* self, struct fb_PluginModule* cleanup);
CLOOP_EXTERN_C void fb_PluginManager_unregisterModule(struct fb_PluginManager* self, struct fb_PluginModule* cleanup);
CLOOP_EXTERN_C struct fb_PluginSet* fb_PluginManager_getPlugins(struct fb_PluginManager* self, struct fb_Status* status, unsigned pluginType, const char* namesList, struct fb_FirebirdConf* firebirdConf);
CLOOP_EXTERN_C struct fb_Config* fb_PluginManager_getConfig(struct fb_PluginManager* self, struct fb_Status* status, const char* filename);
CLOOP_EXTERN_C void fb_PluginManager_releasePlugin(struct fb_PluginManager* self, struct fb_PluginBase* plugin);

#define fb_CryptKey_VERSION 2

struct fb_CryptKey;

struct fb_CryptKeyVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*setSymmetric)(struct fb_CryptKey* self, struct fb_Status* status, const char* type, unsigned keyLength, const void* key);
	void (*setAsymmetric)(struct fb_CryptKey* self, struct fb_Status* status, const char* type, unsigned encryptKeyLength, const void* encryptKey, unsigned decryptKeyLength, const void* decryptKey);
	const void* (*getEncryptKey)(struct fb_CryptKey* self, unsigned* length);
	const void* (*getDecryptKey)(struct fb_CryptKey* self, unsigned* length);
};

struct fb_CryptKey
{
	void* cloopDummy[1];
	struct fb_CryptKeyVTable* vtable;
};

CLOOP_EXTERN_C void fb_CryptKey_setSymmetric(struct fb_CryptKey* self, struct fb_Status* status, const char* type, unsigned keyLength, const void* key);
CLOOP_EXTERN_C void fb_CryptKey_setAsymmetric(struct fb_CryptKey* self, struct fb_Status* status, const char* type, unsigned encryptKeyLength, const void* encryptKey, unsigned decryptKeyLength, const void* decryptKey);
CLOOP_EXTERN_C const void* fb_CryptKey_getEncryptKey(struct fb_CryptKey* self, unsigned* length);
CLOOP_EXTERN_C const void* fb_CryptKey_getDecryptKey(struct fb_CryptKey* self, unsigned* length);

#define fb_ConfigManager_VERSION 3

#define fb_ConfigManager_DIR_BIN ((unsigned) (0))
#define fb_ConfigManager_DIR_SBIN ((unsigned) (1))
#define fb_ConfigManager_DIR_CONF ((unsigned) (2))
#define fb_ConfigManager_DIR_LIB ((unsigned) (3))
#define fb_ConfigManager_DIR_INC ((unsigned) (4))
#define fb_ConfigManager_DIR_DOC ((unsigned) (5))
#define fb_ConfigManager_DIR_UDF ((unsigned) (6))
#define fb_ConfigManager_DIR_SAMPLE ((unsigned) (7))
#define fb_ConfigManager_DIR_SAMPLEDB ((unsigned) (8))
#define fb_ConfigManager_DIR_HELP ((unsigned) (9))
#define fb_ConfigManager_DIR_INTL ((unsigned) (10))
#define fb_ConfigManager_DIR_MISC ((unsigned) (11))
#define fb_ConfigManager_DIR_SECDB ((unsigned) (12))
#define fb_ConfigManager_DIR_MSG ((unsigned) (13))
#define fb_ConfigManager_DIR_LOG ((unsigned) (14))
#define fb_ConfigManager_DIR_GUARD ((unsigned) (15))
#define fb_ConfigManager_DIR_PLUGINS ((unsigned) (16))
#define fb_ConfigManager_DIR_TZDATA ((unsigned) (17))
#define fb_ConfigManager_DIR_COUNT ((unsigned) (18))

struct fb_ConfigManager;

struct fb_ConfigManagerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getDirectory)(struct fb_ConfigManager* self, unsigned code);
	struct fb_FirebirdConf* (*getFirebirdConf)(struct fb_ConfigManager* self);
	struct fb_FirebirdConf* (*getDatabaseConf)(struct fb_ConfigManager* self, const char* dbName);
	struct fb_Config* (*getPluginConfig)(struct fb_ConfigManager* self, const char* configuredPlugin);
	const char* (*getInstallDirectory)(struct fb_ConfigManager* self);
	const char* (*getRootDirectory)(struct fb_ConfigManager* self);
	const char* (*getDefaultSecurityDb)(struct fb_ConfigManager* self);
};

struct fb_ConfigManager
{
	void* cloopDummy[1];
	struct fb_ConfigManagerVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_ConfigManager_getDirectory(struct fb_ConfigManager* self, unsigned code);
CLOOP_EXTERN_C struct fb_FirebirdConf* fb_ConfigManager_getFirebirdConf(struct fb_ConfigManager* self);
CLOOP_EXTERN_C struct fb_FirebirdConf* fb_ConfigManager_getDatabaseConf(struct fb_ConfigManager* self, const char* dbName);
CLOOP_EXTERN_C struct fb_Config* fb_ConfigManager_getPluginConfig(struct fb_ConfigManager* self, const char* configuredPlugin);
CLOOP_EXTERN_C const char* fb_ConfigManager_getInstallDirectory(struct fb_ConfigManager* self);
CLOOP_EXTERN_C const char* fb_ConfigManager_getRootDirectory(struct fb_ConfigManager* self);
CLOOP_EXTERN_C const char* fb_ConfigManager_getDefaultSecurityDb(struct fb_ConfigManager* self);

#define fb_EventCallback_VERSION 3

struct fb_EventCallback;

struct fb_EventCallbackVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_EventCallback* self);
	int (*release)(struct fb_EventCallback* self);
	void (*eventCallbackFunction)(struct fb_EventCallback* self, unsigned length, const unsigned char* events);
};

struct fb_EventCallback
{
	void* cloopDummy[1];
	struct fb_EventCallbackVTable* vtable;
};

CLOOP_EXTERN_C void fb_EventCallback_addRef(struct fb_EventCallback* self);
CLOOP_EXTERN_C int fb_EventCallback_release(struct fb_EventCallback* self);
CLOOP_EXTERN_C void fb_EventCallback_eventCallbackFunction(struct fb_EventCallback* self, unsigned length, const unsigned char* events);

#define fb_Blob_VERSION 4

struct fb_Blob;

struct fb_BlobVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Blob* self);
	int (*release)(struct fb_Blob* self);
	void (*getInfo)(struct fb_Blob* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	int (*getSegment)(struct fb_Blob* self, struct fb_Status* status, unsigned bufferLength, void* buffer, unsigned* segmentLength);
	void (*putSegment)(struct fb_Blob* self, struct fb_Status* status, unsigned length, const void* buffer);
	void (*deprecatedCancel)(struct fb_Blob* self, struct fb_Status* status);
	void (*deprecatedClose)(struct fb_Blob* self, struct fb_Status* status);
	int (*seek)(struct fb_Blob* self, struct fb_Status* status, int mode, int offset);
	void (*cancel)(struct fb_Blob* self, struct fb_Status* status);
	void (*close)(struct fb_Blob* self, struct fb_Status* status);
};

struct fb_Blob
{
	void* cloopDummy[1];
	struct fb_BlobVTable* vtable;
};

CLOOP_EXTERN_C void fb_Blob_addRef(struct fb_Blob* self);
CLOOP_EXTERN_C int fb_Blob_release(struct fb_Blob* self);
CLOOP_EXTERN_C void fb_Blob_getInfo(struct fb_Blob* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C int fb_Blob_getSegment(struct fb_Blob* self, struct fb_Status* status, unsigned bufferLength, void* buffer, unsigned* segmentLength);
CLOOP_EXTERN_C void fb_Blob_putSegment(struct fb_Blob* self, struct fb_Status* status, unsigned length, const void* buffer);
CLOOP_EXTERN_C void fb_Blob_deprecatedCancel(struct fb_Blob* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Blob_deprecatedClose(struct fb_Blob* self, struct fb_Status* status);
CLOOP_EXTERN_C int fb_Blob_seek(struct fb_Blob* self, struct fb_Status* status, int mode, int offset);
CLOOP_EXTERN_C void fb_Blob_cancel(struct fb_Blob* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Blob_close(struct fb_Blob* self, struct fb_Status* status);

#define fb_Transaction_VERSION 4

struct fb_Transaction;

struct fb_TransactionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Transaction* self);
	int (*release)(struct fb_Transaction* self);
	void (*getInfo)(struct fb_Transaction* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	void (*prepare)(struct fb_Transaction* self, struct fb_Status* status, unsigned msgLength, const unsigned char* message);
	void (*deprecatedCommit)(struct fb_Transaction* self, struct fb_Status* status);
	void (*commitRetaining)(struct fb_Transaction* self, struct fb_Status* status);
	void (*deprecatedRollback)(struct fb_Transaction* self, struct fb_Status* status);
	void (*rollbackRetaining)(struct fb_Transaction* self, struct fb_Status* status);
	void (*deprecatedDisconnect)(struct fb_Transaction* self, struct fb_Status* status);
	struct fb_Transaction* (*join)(struct fb_Transaction* self, struct fb_Status* status, struct fb_Transaction* transaction);
	struct fb_Transaction* (*validate)(struct fb_Transaction* self, struct fb_Status* status, struct fb_Attachment* attachment);
	struct fb_Transaction* (*enterDtc)(struct fb_Transaction* self, struct fb_Status* status);
	void (*commit)(struct fb_Transaction* self, struct fb_Status* status);
	void (*rollback)(struct fb_Transaction* self, struct fb_Status* status);
	void (*disconnect)(struct fb_Transaction* self, struct fb_Status* status);
};

struct fb_Transaction
{
	void* cloopDummy[1];
	struct fb_TransactionVTable* vtable;
};

CLOOP_EXTERN_C void fb_Transaction_addRef(struct fb_Transaction* self);
CLOOP_EXTERN_C int fb_Transaction_release(struct fb_Transaction* self);
CLOOP_EXTERN_C void fb_Transaction_getInfo(struct fb_Transaction* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C void fb_Transaction_prepare(struct fb_Transaction* self, struct fb_Status* status, unsigned msgLength, const unsigned char* message);
CLOOP_EXTERN_C void fb_Transaction_deprecatedCommit(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Transaction_commitRetaining(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Transaction_deprecatedRollback(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Transaction_rollbackRetaining(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Transaction_deprecatedDisconnect(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_Transaction* fb_Transaction_join(struct fb_Transaction* self, struct fb_Status* status, struct fb_Transaction* transaction);
CLOOP_EXTERN_C struct fb_Transaction* fb_Transaction_validate(struct fb_Transaction* self, struct fb_Status* status, struct fb_Attachment* attachment);
CLOOP_EXTERN_C struct fb_Transaction* fb_Transaction_enterDtc(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Transaction_commit(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Transaction_rollback(struct fb_Transaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Transaction_disconnect(struct fb_Transaction* self, struct fb_Status* status);

#define fb_MessageMetadata_VERSION 4

struct fb_MessageMetadata;

struct fb_MessageMetadataVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_MessageMetadata* self);
	int (*release)(struct fb_MessageMetadata* self);
	unsigned (*getCount)(struct fb_MessageMetadata* self, struct fb_Status* status);
	const char* (*getField)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	const char* (*getRelation)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	const char* (*getOwner)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	const char* (*getAlias)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	unsigned (*getType)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	FB_BOOLEAN (*isNullable)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	int (*getSubType)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	unsigned (*getLength)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	int (*getScale)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	unsigned (*getCharSet)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	unsigned (*getOffset)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	unsigned (*getNullOffset)(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
	struct fb_MetadataBuilder* (*getBuilder)(struct fb_MessageMetadata* self, struct fb_Status* status);
	unsigned (*getMessageLength)(struct fb_MessageMetadata* self, struct fb_Status* status);
	unsigned (*getAlignment)(struct fb_MessageMetadata* self, struct fb_Status* status);
	unsigned (*getAlignedLength)(struct fb_MessageMetadata* self, struct fb_Status* status);
};

struct fb_MessageMetadata
{
	void* cloopDummy[1];
	struct fb_MessageMetadataVTable* vtable;
};

CLOOP_EXTERN_C void fb_MessageMetadata_addRef(struct fb_MessageMetadata* self);
CLOOP_EXTERN_C int fb_MessageMetadata_release(struct fb_MessageMetadata* self);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getCount(struct fb_MessageMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_MessageMetadata_getField(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C const char* fb_MessageMetadata_getRelation(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C const char* fb_MessageMetadata_getOwner(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C const char* fb_MessageMetadata_getAlias(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getType(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C FB_BOOLEAN fb_MessageMetadata_isNullable(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C int fb_MessageMetadata_getSubType(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getLength(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C int fb_MessageMetadata_getScale(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getCharSet(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getOffset(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getNullOffset(struct fb_MessageMetadata* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C struct fb_MetadataBuilder* fb_MessageMetadata_getBuilder(struct fb_MessageMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getMessageLength(struct fb_MessageMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getAlignment(struct fb_MessageMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_MessageMetadata_getAlignedLength(struct fb_MessageMetadata* self, struct fb_Status* status);

#define fb_MetadataBuilder_VERSION 4

struct fb_MetadataBuilder;

struct fb_MetadataBuilderVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_MetadataBuilder* self);
	int (*release)(struct fb_MetadataBuilder* self);
	void (*setType)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, unsigned type);
	void (*setSubType)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, int subType);
	void (*setLength)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, unsigned length);
	void (*setCharSet)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, unsigned charSet);
	void (*setScale)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, int scale);
	void (*truncate)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned count);
	void (*moveNameToIndex)(struct fb_MetadataBuilder* self, struct fb_Status* status, const char* name, unsigned index);
	void (*remove)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index);
	unsigned (*addField)(struct fb_MetadataBuilder* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getMetadata)(struct fb_MetadataBuilder* self, struct fb_Status* status);
	void (*setField)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* field);
	void (*setRelation)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* relation);
	void (*setOwner)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* owner);
	void (*setAlias)(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* alias);
};

struct fb_MetadataBuilder
{
	void* cloopDummy[1];
	struct fb_MetadataBuilderVTable* vtable;
};

CLOOP_EXTERN_C void fb_MetadataBuilder_addRef(struct fb_MetadataBuilder* self);
CLOOP_EXTERN_C int fb_MetadataBuilder_release(struct fb_MetadataBuilder* self);
CLOOP_EXTERN_C void fb_MetadataBuilder_setType(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, unsigned type);
CLOOP_EXTERN_C void fb_MetadataBuilder_setSubType(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, int subType);
CLOOP_EXTERN_C void fb_MetadataBuilder_setLength(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, unsigned length);
CLOOP_EXTERN_C void fb_MetadataBuilder_setCharSet(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, unsigned charSet);
CLOOP_EXTERN_C void fb_MetadataBuilder_setScale(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, int scale);
CLOOP_EXTERN_C void fb_MetadataBuilder_truncate(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned count);
CLOOP_EXTERN_C void fb_MetadataBuilder_moveNameToIndex(struct fb_MetadataBuilder* self, struct fb_Status* status, const char* name, unsigned index);
CLOOP_EXTERN_C void fb_MetadataBuilder_remove(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index);
CLOOP_EXTERN_C unsigned fb_MetadataBuilder_addField(struct fb_MetadataBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_MetadataBuilder_getMetadata(struct fb_MetadataBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_MetadataBuilder_setField(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* field);
CLOOP_EXTERN_C void fb_MetadataBuilder_setRelation(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* relation);
CLOOP_EXTERN_C void fb_MetadataBuilder_setOwner(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* owner);
CLOOP_EXTERN_C void fb_MetadataBuilder_setAlias(struct fb_MetadataBuilder* self, struct fb_Status* status, unsigned index, const char* alias);

#define fb_ResultSet_VERSION 5

#define fb_ResultSet_INF_RECORD_COUNT ((unsigned char) (10))

struct fb_ResultSet;

struct fb_ResultSetVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_ResultSet* self);
	int (*release)(struct fb_ResultSet* self);
	int (*fetchNext)(struct fb_ResultSet* self, struct fb_Status* status, void* message);
	int (*fetchPrior)(struct fb_ResultSet* self, struct fb_Status* status, void* message);
	int (*fetchFirst)(struct fb_ResultSet* self, struct fb_Status* status, void* message);
	int (*fetchLast)(struct fb_ResultSet* self, struct fb_Status* status, void* message);
	int (*fetchAbsolute)(struct fb_ResultSet* self, struct fb_Status* status, int position, void* message);
	int (*fetchRelative)(struct fb_ResultSet* self, struct fb_Status* status, int offset, void* message);
	FB_BOOLEAN (*isEof)(struct fb_ResultSet* self, struct fb_Status* status);
	FB_BOOLEAN (*isBof)(struct fb_ResultSet* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getMetadata)(struct fb_ResultSet* self, struct fb_Status* status);
	void (*deprecatedClose)(struct fb_ResultSet* self, struct fb_Status* status);
	void (*setDelayedOutputFormat)(struct fb_ResultSet* self, struct fb_Status* status, struct fb_MessageMetadata* format);
	void (*close)(struct fb_ResultSet* self, struct fb_Status* status);
	void (*getInfo)(struct fb_ResultSet* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
};

struct fb_ResultSet
{
	void* cloopDummy[1];
	struct fb_ResultSetVTable* vtable;
};

CLOOP_EXTERN_C void fb_ResultSet_addRef(struct fb_ResultSet* self);
CLOOP_EXTERN_C int fb_ResultSet_release(struct fb_ResultSet* self);
CLOOP_EXTERN_C int fb_ResultSet_fetchNext(struct fb_ResultSet* self, struct fb_Status* status, void* message);
CLOOP_EXTERN_C int fb_ResultSet_fetchPrior(struct fb_ResultSet* self, struct fb_Status* status, void* message);
CLOOP_EXTERN_C int fb_ResultSet_fetchFirst(struct fb_ResultSet* self, struct fb_Status* status, void* message);
CLOOP_EXTERN_C int fb_ResultSet_fetchLast(struct fb_ResultSet* self, struct fb_Status* status, void* message);
CLOOP_EXTERN_C int fb_ResultSet_fetchAbsolute(struct fb_ResultSet* self, struct fb_Status* status, int position, void* message);
CLOOP_EXTERN_C int fb_ResultSet_fetchRelative(struct fb_ResultSet* self, struct fb_Status* status, int offset, void* message);
CLOOP_EXTERN_C FB_BOOLEAN fb_ResultSet_isEof(struct fb_ResultSet* self, struct fb_Status* status);
CLOOP_EXTERN_C FB_BOOLEAN fb_ResultSet_isBof(struct fb_ResultSet* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_ResultSet_getMetadata(struct fb_ResultSet* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ResultSet_deprecatedClose(struct fb_ResultSet* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ResultSet_setDelayedOutputFormat(struct fb_ResultSet* self, struct fb_Status* status, struct fb_MessageMetadata* format);
CLOOP_EXTERN_C void fb_ResultSet_close(struct fb_ResultSet* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ResultSet_getInfo(struct fb_ResultSet* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);

#define fb_Statement_VERSION 5

#define fb_Statement_PREPARE_PREFETCH_NONE ((unsigned) (0x0))
#define fb_Statement_PREPARE_PREFETCH_TYPE ((unsigned) (0x1))
#define fb_Statement_PREPARE_PREFETCH_INPUT_PARAMETERS ((unsigned) (0x2))
#define fb_Statement_PREPARE_PREFETCH_OUTPUT_PARAMETERS ((unsigned) (0x4))
#define fb_Statement_PREPARE_PREFETCH_LEGACY_PLAN ((unsigned) (0x8))
#define fb_Statement_PREPARE_PREFETCH_DETAILED_PLAN ((unsigned) (0x10))
#define fb_Statement_PREPARE_PREFETCH_AFFECTED_RECORDS ((unsigned) (0x20))
#define fb_Statement_PREPARE_PREFETCH_FLAGS ((unsigned) (0x40))
#define fb_Statement_PREPARE_PREFETCH_METADATA ((unsigned) (fb_Statement_PREPARE_PREFETCH_TYPE | fb_Statement_PREPARE_PREFETCH_FLAGS | fb_Statement_PREPARE_PREFETCH_INPUT_PARAMETERS | fb_Statement_PREPARE_PREFETCH_OUTPUT_PARAMETERS))
#define fb_Statement_PREPARE_PREFETCH_ALL ((unsigned) (fb_Statement_PREPARE_PREFETCH_METADATA | fb_Statement_PREPARE_PREFETCH_LEGACY_PLAN | fb_Statement_PREPARE_PREFETCH_DETAILED_PLAN | fb_Statement_PREPARE_PREFETCH_AFFECTED_RECORDS))
#define fb_Statement_FLAG_HAS_CURSOR ((unsigned) (0x1))
#define fb_Statement_FLAG_REPEAT_EXECUTE ((unsigned) (0x2))
#define fb_Statement_CURSOR_TYPE_SCROLLABLE ((unsigned) (0x1))

struct fb_Statement;

struct fb_StatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Statement* self);
	int (*release)(struct fb_Statement* self);
	void (*getInfo)(struct fb_Statement* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	unsigned (*getType)(struct fb_Statement* self, struct fb_Status* status);
	const char* (*getPlan)(struct fb_Statement* self, struct fb_Status* status, FB_BOOLEAN detailed);
	ISC_UINT64 (*getAffectedRecords)(struct fb_Statement* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getInputMetadata)(struct fb_Statement* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getOutputMetadata)(struct fb_Statement* self, struct fb_Status* status);
	struct fb_Transaction* (*execute)(struct fb_Statement* self, struct fb_Status* status, struct fb_Transaction* transaction, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, void* outBuffer);
	struct fb_ResultSet* (*openCursor)(struct fb_Statement* self, struct fb_Status* status, struct fb_Transaction* transaction, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, unsigned flags);
	void (*setCursorName)(struct fb_Statement* self, struct fb_Status* status, const char* name);
	void (*deprecatedFree)(struct fb_Statement* self, struct fb_Status* status);
	unsigned (*getFlags)(struct fb_Statement* self, struct fb_Status* status);
	unsigned (*getTimeout)(struct fb_Statement* self, struct fb_Status* status);
	void (*setTimeout)(struct fb_Statement* self, struct fb_Status* status, unsigned timeOut);
	struct fb_Batch* (*createBatch)(struct fb_Statement* self, struct fb_Status* status, struct fb_MessageMetadata* inMetadata, unsigned parLength, const unsigned char* par);
	void (*free)(struct fb_Statement* self, struct fb_Status* status);
};

struct fb_Statement
{
	void* cloopDummy[1];
	struct fb_StatementVTable* vtable;
};

CLOOP_EXTERN_C void fb_Statement_addRef(struct fb_Statement* self);
CLOOP_EXTERN_C int fb_Statement_release(struct fb_Statement* self);
CLOOP_EXTERN_C void fb_Statement_getInfo(struct fb_Statement* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C unsigned fb_Statement_getType(struct fb_Statement* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_Statement_getPlan(struct fb_Statement* self, struct fb_Status* status, FB_BOOLEAN detailed);
CLOOP_EXTERN_C ISC_UINT64 fb_Statement_getAffectedRecords(struct fb_Statement* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_Statement_getInputMetadata(struct fb_Statement* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_Statement_getOutputMetadata(struct fb_Statement* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_Transaction* fb_Statement_execute(struct fb_Statement* self, struct fb_Status* status, struct fb_Transaction* transaction, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, void* outBuffer);
CLOOP_EXTERN_C struct fb_ResultSet* fb_Statement_openCursor(struct fb_Statement* self, struct fb_Status* status, struct fb_Transaction* transaction, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, unsigned flags);
CLOOP_EXTERN_C void fb_Statement_setCursorName(struct fb_Statement* self, struct fb_Status* status, const char* name);
CLOOP_EXTERN_C void fb_Statement_deprecatedFree(struct fb_Statement* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_Statement_getFlags(struct fb_Statement* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_Statement_getTimeout(struct fb_Statement* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Statement_setTimeout(struct fb_Statement* self, struct fb_Status* status, unsigned timeOut);
CLOOP_EXTERN_C struct fb_Batch* fb_Statement_createBatch(struct fb_Statement* self, struct fb_Status* status, struct fb_MessageMetadata* inMetadata, unsigned parLength, const unsigned char* par);
CLOOP_EXTERN_C void fb_Statement_free(struct fb_Statement* self, struct fb_Status* status);

#define fb_Batch_VERSION 4

#define fb_Batch_VERSION1 ((unsigned char) (1))
#define fb_Batch_CURRENT_VERSION ((unsigned char) (fb_Batch_VERSION1))
#define fb_Batch_TAG_MULTIERROR ((unsigned char) (1))
#define fb_Batch_TAG_RECORD_COUNTS ((unsigned char) (2))
#define fb_Batch_TAG_BUFFER_BYTES_SIZE ((unsigned char) (3))
#define fb_Batch_TAG_BLOB_POLICY ((unsigned char) (4))
#define fb_Batch_TAG_DETAILED_ERRORS ((unsigned char) (5))
#define fb_Batch_INF_BUFFER_BYTES_SIZE ((unsigned char) (10))
#define fb_Batch_INF_DATA_BYTES_SIZE ((unsigned char) (11))
#define fb_Batch_INF_BLOBS_BYTES_SIZE ((unsigned char) (12))
#define fb_Batch_INF_BLOB_ALIGNMENT ((unsigned char) (13))
#define fb_Batch_INF_BLOB_HEADER ((unsigned char) (14))
#define fb_Batch_BLOB_NONE ((unsigned char) (0))
#define fb_Batch_BLOB_ID_ENGINE ((unsigned char) (1))
#define fb_Batch_BLOB_ID_USER ((unsigned char) (2))
#define fb_Batch_BLOB_STREAM ((unsigned char) (3))
#define fb_Batch_BLOB_SEGHDR_ALIGN ((unsigned) (2))

struct fb_Batch;

struct fb_BatchVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Batch* self);
	int (*release)(struct fb_Batch* self);
	void (*add)(struct fb_Batch* self, struct fb_Status* status, unsigned count, const void* inBuffer);
	void (*addBlob)(struct fb_Batch* self, struct fb_Status* status, unsigned length, const void* inBuffer, ISC_QUAD* blobId, unsigned parLength, const unsigned char* par);
	void (*appendBlobData)(struct fb_Batch* self, struct fb_Status* status, unsigned length, const void* inBuffer);
	void (*addBlobStream)(struct fb_Batch* self, struct fb_Status* status, unsigned length, const void* inBuffer);
	void (*registerBlob)(struct fb_Batch* self, struct fb_Status* status, const ISC_QUAD* existingBlob, ISC_QUAD* blobId);
	struct fb_BatchCompletionState* (*execute)(struct fb_Batch* self, struct fb_Status* status, struct fb_Transaction* transaction);
	void (*cancel)(struct fb_Batch* self, struct fb_Status* status);
	unsigned (*getBlobAlignment)(struct fb_Batch* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getMetadata)(struct fb_Batch* self, struct fb_Status* status);
	void (*setDefaultBpb)(struct fb_Batch* self, struct fb_Status* status, unsigned parLength, const unsigned char* par);
	void (*deprecatedClose)(struct fb_Batch* self, struct fb_Status* status);
	void (*close)(struct fb_Batch* self, struct fb_Status* status);
	void (*getInfo)(struct fb_Batch* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
};

struct fb_Batch
{
	void* cloopDummy[1];
	struct fb_BatchVTable* vtable;
};

CLOOP_EXTERN_C void fb_Batch_addRef(struct fb_Batch* self);
CLOOP_EXTERN_C int fb_Batch_release(struct fb_Batch* self);
CLOOP_EXTERN_C void fb_Batch_add(struct fb_Batch* self, struct fb_Status* status, unsigned count, const void* inBuffer);
CLOOP_EXTERN_C void fb_Batch_addBlob(struct fb_Batch* self, struct fb_Status* status, unsigned length, const void* inBuffer, ISC_QUAD* blobId, unsigned parLength, const unsigned char* par);
CLOOP_EXTERN_C void fb_Batch_appendBlobData(struct fb_Batch* self, struct fb_Status* status, unsigned length, const void* inBuffer);
CLOOP_EXTERN_C void fb_Batch_addBlobStream(struct fb_Batch* self, struct fb_Status* status, unsigned length, const void* inBuffer);
CLOOP_EXTERN_C void fb_Batch_registerBlob(struct fb_Batch* self, struct fb_Status* status, const ISC_QUAD* existingBlob, ISC_QUAD* blobId);
CLOOP_EXTERN_C struct fb_BatchCompletionState* fb_Batch_execute(struct fb_Batch* self, struct fb_Status* status, struct fb_Transaction* transaction);
CLOOP_EXTERN_C void fb_Batch_cancel(struct fb_Batch* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_Batch_getBlobAlignment(struct fb_Batch* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_Batch_getMetadata(struct fb_Batch* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Batch_setDefaultBpb(struct fb_Batch* self, struct fb_Status* status, unsigned parLength, const unsigned char* par);
CLOOP_EXTERN_C void fb_Batch_deprecatedClose(struct fb_Batch* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Batch_close(struct fb_Batch* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Batch_getInfo(struct fb_Batch* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);

#define fb_BatchCompletionState_VERSION 3

#define fb_BatchCompletionState_EXECUTE_FAILED ((int) (-1))
#define fb_BatchCompletionState_SUCCESS_NO_INFO ((int) (-2))
#define fb_BatchCompletionState_NO_MORE_ERRORS ((unsigned) (0xffffffff))

struct fb_BatchCompletionState;

struct fb_BatchCompletionStateVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_BatchCompletionState* self);
	unsigned (*getSize)(struct fb_BatchCompletionState* self, struct fb_Status* status);
	int (*getState)(struct fb_BatchCompletionState* self, struct fb_Status* status, unsigned pos);
	unsigned (*findError)(struct fb_BatchCompletionState* self, struct fb_Status* status, unsigned pos);
	void (*getStatus)(struct fb_BatchCompletionState* self, struct fb_Status* status, struct fb_Status* to, unsigned pos);
};

struct fb_BatchCompletionState
{
	void* cloopDummy[1];
	struct fb_BatchCompletionStateVTable* vtable;
};

CLOOP_EXTERN_C void fb_BatchCompletionState_dispose(struct fb_BatchCompletionState* self);
CLOOP_EXTERN_C unsigned fb_BatchCompletionState_getSize(struct fb_BatchCompletionState* self, struct fb_Status* status);
CLOOP_EXTERN_C int fb_BatchCompletionState_getState(struct fb_BatchCompletionState* self, struct fb_Status* status, unsigned pos);
CLOOP_EXTERN_C unsigned fb_BatchCompletionState_findError(struct fb_BatchCompletionState* self, struct fb_Status* status, unsigned pos);
CLOOP_EXTERN_C void fb_BatchCompletionState_getStatus(struct fb_BatchCompletionState* self, struct fb_Status* status, struct fb_Status* to, unsigned pos);

#define fb_Replicator_VERSION 4

struct fb_Replicator;

struct fb_ReplicatorVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Replicator* self);
	int (*release)(struct fb_Replicator* self);
	void (*process)(struct fb_Replicator* self, struct fb_Status* status, unsigned length, const unsigned char* data);
	void (*deprecatedClose)(struct fb_Replicator* self, struct fb_Status* status);
	void (*close)(struct fb_Replicator* self, struct fb_Status* status);
};

struct fb_Replicator
{
	void* cloopDummy[1];
	struct fb_ReplicatorVTable* vtable;
};

CLOOP_EXTERN_C void fb_Replicator_addRef(struct fb_Replicator* self);
CLOOP_EXTERN_C int fb_Replicator_release(struct fb_Replicator* self);
CLOOP_EXTERN_C void fb_Replicator_process(struct fb_Replicator* self, struct fb_Status* status, unsigned length, const unsigned char* data);
CLOOP_EXTERN_C void fb_Replicator_deprecatedClose(struct fb_Replicator* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Replicator_close(struct fb_Replicator* self, struct fb_Status* status);

#define fb_Request_VERSION 4

struct fb_Request;

struct fb_RequestVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Request* self);
	int (*release)(struct fb_Request* self);
	void (*receive)(struct fb_Request* self, struct fb_Status* status, int level, unsigned msgType, unsigned length, void* message);
	void (*send)(struct fb_Request* self, struct fb_Status* status, int level, unsigned msgType, unsigned length, const void* message);
	void (*getInfo)(struct fb_Request* self, struct fb_Status* status, int level, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	void (*start)(struct fb_Request* self, struct fb_Status* status, struct fb_Transaction* tra, int level);
	void (*startAndSend)(struct fb_Request* self, struct fb_Status* status, struct fb_Transaction* tra, int level, unsigned msgType, unsigned length, const void* message);
	void (*unwind)(struct fb_Request* self, struct fb_Status* status, int level);
	void (*deprecatedFree)(struct fb_Request* self, struct fb_Status* status);
	void (*free)(struct fb_Request* self, struct fb_Status* status);
};

struct fb_Request
{
	void* cloopDummy[1];
	struct fb_RequestVTable* vtable;
};

CLOOP_EXTERN_C void fb_Request_addRef(struct fb_Request* self);
CLOOP_EXTERN_C int fb_Request_release(struct fb_Request* self);
CLOOP_EXTERN_C void fb_Request_receive(struct fb_Request* self, struct fb_Status* status, int level, unsigned msgType, unsigned length, void* message);
CLOOP_EXTERN_C void fb_Request_send(struct fb_Request* self, struct fb_Status* status, int level, unsigned msgType, unsigned length, const void* message);
CLOOP_EXTERN_C void fb_Request_getInfo(struct fb_Request* self, struct fb_Status* status, int level, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C void fb_Request_start(struct fb_Request* self, struct fb_Status* status, struct fb_Transaction* tra, int level);
CLOOP_EXTERN_C void fb_Request_startAndSend(struct fb_Request* self, struct fb_Status* status, struct fb_Transaction* tra, int level, unsigned msgType, unsigned length, const void* message);
CLOOP_EXTERN_C void fb_Request_unwind(struct fb_Request* self, struct fb_Status* status, int level);
CLOOP_EXTERN_C void fb_Request_deprecatedFree(struct fb_Request* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Request_free(struct fb_Request* self, struct fb_Status* status);

#define fb_Events_VERSION 4

struct fb_Events;

struct fb_EventsVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Events* self);
	int (*release)(struct fb_Events* self);
	void (*deprecatedCancel)(struct fb_Events* self, struct fb_Status* status);
	void (*cancel)(struct fb_Events* self, struct fb_Status* status);
};

struct fb_Events
{
	void* cloopDummy[1];
	struct fb_EventsVTable* vtable;
};

CLOOP_EXTERN_C void fb_Events_addRef(struct fb_Events* self);
CLOOP_EXTERN_C int fb_Events_release(struct fb_Events* self);
CLOOP_EXTERN_C void fb_Events_deprecatedCancel(struct fb_Events* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Events_cancel(struct fb_Events* self, struct fb_Status* status);

#define fb_Attachment_VERSION 5

struct fb_Attachment;

struct fb_AttachmentVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Attachment* self);
	int (*release)(struct fb_Attachment* self);
	void (*getInfo)(struct fb_Attachment* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
	struct fb_Transaction* (*startTransaction)(struct fb_Attachment* self, struct fb_Status* status, unsigned tpbLength, const unsigned char* tpb);
	struct fb_Transaction* (*reconnectTransaction)(struct fb_Attachment* self, struct fb_Status* status, unsigned length, const unsigned char* id);
	struct fb_Request* (*compileRequest)(struct fb_Attachment* self, struct fb_Status* status, unsigned blrLength, const unsigned char* blr);
	void (*transactRequest)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned blrLength, const unsigned char* blr, unsigned inMsgLength, const unsigned char* inMsg, unsigned outMsgLength, unsigned char* outMsg);
	struct fb_Blob* (*createBlob)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
	struct fb_Blob* (*openBlob)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
	int (*getSlice)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
	void (*putSlice)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
	void (*executeDyn)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned length, const unsigned char* dyn);
	struct fb_Statement* (*prepare)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* tra, unsigned stmtLength, const char* sqlStmt, unsigned dialect, unsigned flags);
	struct fb_Transaction* (*execute)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, void* outBuffer);
	struct fb_ResultSet* (*openCursor)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, const char* cursorName, unsigned cursorFlags);
	struct fb_Events* (*queEvents)(struct fb_Attachment* self, struct fb_Status* status, struct fb_EventCallback* callback, unsigned length, const unsigned char* events);
	void (*cancelOperation)(struct fb_Attachment* self, struct fb_Status* status, int option);
	void (*ping)(struct fb_Attachment* self, struct fb_Status* status);
	void (*deprecatedDetach)(struct fb_Attachment* self, struct fb_Status* status);
	void (*deprecatedDropDatabase)(struct fb_Attachment* self, struct fb_Status* status);
	unsigned (*getIdleTimeout)(struct fb_Attachment* self, struct fb_Status* status);
	void (*setIdleTimeout)(struct fb_Attachment* self, struct fb_Status* status, unsigned timeOut);
	unsigned (*getStatementTimeout)(struct fb_Attachment* self, struct fb_Status* status);
	void (*setStatementTimeout)(struct fb_Attachment* self, struct fb_Status* status, unsigned timeOut);
	struct fb_Batch* (*createBatch)(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct fb_MessageMetadata* inMetadata, unsigned parLength, const unsigned char* par);
	struct fb_Replicator* (*createReplicator)(struct fb_Attachment* self, struct fb_Status* status);
	void (*detach)(struct fb_Attachment* self, struct fb_Status* status);
	void (*dropDatabase)(struct fb_Attachment* self, struct fb_Status* status);
};

struct fb_Attachment
{
	void* cloopDummy[1];
	struct fb_AttachmentVTable* vtable;
};

CLOOP_EXTERN_C void fb_Attachment_addRef(struct fb_Attachment* self);
CLOOP_EXTERN_C int fb_Attachment_release(struct fb_Attachment* self);
CLOOP_EXTERN_C void fb_Attachment_getInfo(struct fb_Attachment* self, struct fb_Status* status, unsigned itemsLength, const unsigned char* items, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C struct fb_Transaction* fb_Attachment_startTransaction(struct fb_Attachment* self, struct fb_Status* status, unsigned tpbLength, const unsigned char* tpb);
CLOOP_EXTERN_C struct fb_Transaction* fb_Attachment_reconnectTransaction(struct fb_Attachment* self, struct fb_Status* status, unsigned length, const unsigned char* id);
CLOOP_EXTERN_C struct fb_Request* fb_Attachment_compileRequest(struct fb_Attachment* self, struct fb_Status* status, unsigned blrLength, const unsigned char* blr);
CLOOP_EXTERN_C void fb_Attachment_transactRequest(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned blrLength, const unsigned char* blr, unsigned inMsgLength, const unsigned char* inMsg, unsigned outMsgLength, unsigned char* outMsg);
CLOOP_EXTERN_C struct fb_Blob* fb_Attachment_createBlob(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
CLOOP_EXTERN_C struct fb_Blob* fb_Attachment_openBlob(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned bpbLength, const unsigned char* bpb);
CLOOP_EXTERN_C int fb_Attachment_getSlice(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
CLOOP_EXTERN_C void fb_Attachment_putSlice(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_QUAD* id, unsigned sdlLength, const unsigned char* sdl, unsigned paramLength, const unsigned char* param, int sliceLength, unsigned char* slice);
CLOOP_EXTERN_C void fb_Attachment_executeDyn(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned length, const unsigned char* dyn);
CLOOP_EXTERN_C struct fb_Statement* fb_Attachment_prepare(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* tra, unsigned stmtLength, const char* sqlStmt, unsigned dialect, unsigned flags);
CLOOP_EXTERN_C struct fb_Transaction* fb_Attachment_execute(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, void* outBuffer);
CLOOP_EXTERN_C struct fb_ResultSet* fb_Attachment_openCursor(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct fb_MessageMetadata* inMetadata, void* inBuffer, struct fb_MessageMetadata* outMetadata, const char* cursorName, unsigned cursorFlags);
CLOOP_EXTERN_C struct fb_Events* fb_Attachment_queEvents(struct fb_Attachment* self, struct fb_Status* status, struct fb_EventCallback* callback, unsigned length, const unsigned char* events);
CLOOP_EXTERN_C void fb_Attachment_cancelOperation(struct fb_Attachment* self, struct fb_Status* status, int option);
CLOOP_EXTERN_C void fb_Attachment_ping(struct fb_Attachment* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Attachment_deprecatedDetach(struct fb_Attachment* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Attachment_deprecatedDropDatabase(struct fb_Attachment* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_Attachment_getIdleTimeout(struct fb_Attachment* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Attachment_setIdleTimeout(struct fb_Attachment* self, struct fb_Status* status, unsigned timeOut);
CLOOP_EXTERN_C unsigned fb_Attachment_getStatementTimeout(struct fb_Attachment* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Attachment_setStatementTimeout(struct fb_Attachment* self, struct fb_Status* status, unsigned timeOut);
CLOOP_EXTERN_C struct fb_Batch* fb_Attachment_createBatch(struct fb_Attachment* self, struct fb_Status* status, struct fb_Transaction* transaction, unsigned stmtLength, const char* sqlStmt, unsigned dialect, struct fb_MessageMetadata* inMetadata, unsigned parLength, const unsigned char* par);
CLOOP_EXTERN_C struct fb_Replicator* fb_Attachment_createReplicator(struct fb_Attachment* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Attachment_detach(struct fb_Attachment* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Attachment_dropDatabase(struct fb_Attachment* self, struct fb_Status* status);

#define fb_Service_VERSION 5

struct fb_Service;

struct fb_ServiceVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Service* self);
	int (*release)(struct fb_Service* self);
	void (*deprecatedDetach)(struct fb_Service* self, struct fb_Status* status);
	void (*query)(struct fb_Service* self, struct fb_Status* status, unsigned sendLength, const unsigned char* sendItems, unsigned receiveLength, const unsigned char* receiveItems, unsigned bufferLength, unsigned char* buffer);
	void (*start)(struct fb_Service* self, struct fb_Status* status, unsigned spbLength, const unsigned char* spb);
	void (*detach)(struct fb_Service* self, struct fb_Status* status);
	void (*cancel)(struct fb_Service* self, struct fb_Status* status);
};

struct fb_Service
{
	void* cloopDummy[1];
	struct fb_ServiceVTable* vtable;
};

CLOOP_EXTERN_C void fb_Service_addRef(struct fb_Service* self);
CLOOP_EXTERN_C int fb_Service_release(struct fb_Service* self);
CLOOP_EXTERN_C void fb_Service_deprecatedDetach(struct fb_Service* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Service_query(struct fb_Service* self, struct fb_Status* status, unsigned sendLength, const unsigned char* sendItems, unsigned receiveLength, const unsigned char* receiveItems, unsigned bufferLength, unsigned char* buffer);
CLOOP_EXTERN_C void fb_Service_start(struct fb_Service* self, struct fb_Status* status, unsigned spbLength, const unsigned char* spb);
CLOOP_EXTERN_C void fb_Service_detach(struct fb_Service* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Service_cancel(struct fb_Service* self, struct fb_Status* status);

#define fb_Provider_VERSION 4

struct fb_Provider;

struct fb_ProviderVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Provider* self);
	int (*release)(struct fb_Provider* self);
	void (*setOwner)(struct fb_Provider* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_Provider* self);
	struct fb_Attachment* (*attachDatabase)(struct fb_Provider* self, struct fb_Status* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
	struct fb_Attachment* (*createDatabase)(struct fb_Provider* self, struct fb_Status* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
	struct fb_Service* (*attachServiceManager)(struct fb_Provider* self, struct fb_Status* status, const char* service, unsigned spbLength, const unsigned char* spb);
	void (*shutdown)(struct fb_Provider* self, struct fb_Status* status, unsigned timeout, const int reason);
	void (*setDbCryptCallback)(struct fb_Provider* self, struct fb_Status* status, struct fb_CryptKeyCallback* cryptCallback);
};

struct fb_Provider
{
	void* cloopDummy[1];
	struct fb_ProviderVTable* vtable;
};

CLOOP_EXTERN_C void fb_Provider_addRef(struct fb_Provider* self);
CLOOP_EXTERN_C int fb_Provider_release(struct fb_Provider* self);
CLOOP_EXTERN_C void fb_Provider_setOwner(struct fb_Provider* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_Provider_getOwner(struct fb_Provider* self);
CLOOP_EXTERN_C struct fb_Attachment* fb_Provider_attachDatabase(struct fb_Provider* self, struct fb_Status* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
CLOOP_EXTERN_C struct fb_Attachment* fb_Provider_createDatabase(struct fb_Provider* self, struct fb_Status* status, const char* fileName, unsigned dpbLength, const unsigned char* dpb);
CLOOP_EXTERN_C struct fb_Service* fb_Provider_attachServiceManager(struct fb_Provider* self, struct fb_Status* status, const char* service, unsigned spbLength, const unsigned char* spb);
CLOOP_EXTERN_C void fb_Provider_shutdown(struct fb_Provider* self, struct fb_Status* status, unsigned timeout, const int reason);
CLOOP_EXTERN_C void fb_Provider_setDbCryptCallback(struct fb_Provider* self, struct fb_Status* status, struct fb_CryptKeyCallback* cryptCallback);

#define fb_DtcStart_VERSION 3

struct fb_DtcStart;

struct fb_DtcStartVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_DtcStart* self);
	void (*addAttachment)(struct fb_DtcStart* self, struct fb_Status* status, struct fb_Attachment* att);
	void (*addWithTpb)(struct fb_DtcStart* self, struct fb_Status* status, struct fb_Attachment* att, unsigned length, const unsigned char* tpb);
	struct fb_Transaction* (*start)(struct fb_DtcStart* self, struct fb_Status* status);
};

struct fb_DtcStart
{
	void* cloopDummy[1];
	struct fb_DtcStartVTable* vtable;
};

CLOOP_EXTERN_C void fb_DtcStart_dispose(struct fb_DtcStart* self);
CLOOP_EXTERN_C void fb_DtcStart_addAttachment(struct fb_DtcStart* self, struct fb_Status* status, struct fb_Attachment* att);
CLOOP_EXTERN_C void fb_DtcStart_addWithTpb(struct fb_DtcStart* self, struct fb_Status* status, struct fb_Attachment* att, unsigned length, const unsigned char* tpb);
CLOOP_EXTERN_C struct fb_Transaction* fb_DtcStart_start(struct fb_DtcStart* self, struct fb_Status* status);

#define fb_Dtc_VERSION 2

struct fb_Dtc;

struct fb_DtcVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct fb_Transaction* (*join)(struct fb_Dtc* self, struct fb_Status* status, struct fb_Transaction* one, struct fb_Transaction* two);
	struct fb_DtcStart* (*startBuilder)(struct fb_Dtc* self, struct fb_Status* status);
};

struct fb_Dtc
{
	void* cloopDummy[1];
	struct fb_DtcVTable* vtable;
};

CLOOP_EXTERN_C struct fb_Transaction* fb_Dtc_join(struct fb_Dtc* self, struct fb_Status* status, struct fb_Transaction* one, struct fb_Transaction* two);
CLOOP_EXTERN_C struct fb_DtcStart* fb_Dtc_startBuilder(struct fb_Dtc* self, struct fb_Status* status);

#define fb_Auth_VERSION 4

#define fb_Auth_AUTH_FAILED ((int) (-1))
#define fb_Auth_AUTH_SUCCESS ((int) (0))
#define fb_Auth_AUTH_MORE_DATA ((int) (1))
#define fb_Auth_AUTH_CONTINUE ((int) (2))

struct fb_Auth;

struct fb_AuthVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Auth* self);
	int (*release)(struct fb_Auth* self);
	void (*setOwner)(struct fb_Auth* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_Auth* self);
};

struct fb_Auth
{
	void* cloopDummy[1];
	struct fb_AuthVTable* vtable;
};

CLOOP_EXTERN_C void fb_Auth_addRef(struct fb_Auth* self);
CLOOP_EXTERN_C int fb_Auth_release(struct fb_Auth* self);
CLOOP_EXTERN_C void fb_Auth_setOwner(struct fb_Auth* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_Auth_getOwner(struct fb_Auth* self);

#define fb_Writer_VERSION 2

struct fb_Writer;

struct fb_WriterVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*reset)(struct fb_Writer* self);
	void (*add)(struct fb_Writer* self, struct fb_Status* status, const char* name);
	void (*setType)(struct fb_Writer* self, struct fb_Status* status, const char* value);
	void (*setDb)(struct fb_Writer* self, struct fb_Status* status, const char* value);
};

struct fb_Writer
{
	void* cloopDummy[1];
	struct fb_WriterVTable* vtable;
};

CLOOP_EXTERN_C void fb_Writer_reset(struct fb_Writer* self);
CLOOP_EXTERN_C void fb_Writer_add(struct fb_Writer* self, struct fb_Status* status, const char* name);
CLOOP_EXTERN_C void fb_Writer_setType(struct fb_Writer* self, struct fb_Status* status, const char* value);
CLOOP_EXTERN_C void fb_Writer_setDb(struct fb_Writer* self, struct fb_Status* status, const char* value);

#define fb_ServerBlock_VERSION 2

struct fb_ServerBlock;

struct fb_ServerBlockVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getLogin)(struct fb_ServerBlock* self);
	const unsigned char* (*getData)(struct fb_ServerBlock* self, unsigned* length);
	void (*putData)(struct fb_ServerBlock* self, struct fb_Status* status, unsigned length, const void* data);
	struct fb_CryptKey* (*newKey)(struct fb_ServerBlock* self, struct fb_Status* status);
};

struct fb_ServerBlock
{
	void* cloopDummy[1];
	struct fb_ServerBlockVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_ServerBlock_getLogin(struct fb_ServerBlock* self);
CLOOP_EXTERN_C const unsigned char* fb_ServerBlock_getData(struct fb_ServerBlock* self, unsigned* length);
CLOOP_EXTERN_C void fb_ServerBlock_putData(struct fb_ServerBlock* self, struct fb_Status* status, unsigned length, const void* data);
CLOOP_EXTERN_C struct fb_CryptKey* fb_ServerBlock_newKey(struct fb_ServerBlock* self, struct fb_Status* status);

#define fb_ClientBlock_VERSION 4

struct fb_ClientBlock;

struct fb_ClientBlockVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_ClientBlock* self);
	int (*release)(struct fb_ClientBlock* self);
	const char* (*getLogin)(struct fb_ClientBlock* self);
	const char* (*getPassword)(struct fb_ClientBlock* self);
	const unsigned char* (*getData)(struct fb_ClientBlock* self, unsigned* length);
	void (*putData)(struct fb_ClientBlock* self, struct fb_Status* status, unsigned length, const void* data);
	struct fb_CryptKey* (*newKey)(struct fb_ClientBlock* self, struct fb_Status* status);
	struct fb_AuthBlock* (*getAuthBlock)(struct fb_ClientBlock* self, struct fb_Status* status);
};

struct fb_ClientBlock
{
	void* cloopDummy[1];
	struct fb_ClientBlockVTable* vtable;
};

CLOOP_EXTERN_C void fb_ClientBlock_addRef(struct fb_ClientBlock* self);
CLOOP_EXTERN_C int fb_ClientBlock_release(struct fb_ClientBlock* self);
CLOOP_EXTERN_C const char* fb_ClientBlock_getLogin(struct fb_ClientBlock* self);
CLOOP_EXTERN_C const char* fb_ClientBlock_getPassword(struct fb_ClientBlock* self);
CLOOP_EXTERN_C const unsigned char* fb_ClientBlock_getData(struct fb_ClientBlock* self, unsigned* length);
CLOOP_EXTERN_C void fb_ClientBlock_putData(struct fb_ClientBlock* self, struct fb_Status* status, unsigned length, const void* data);
CLOOP_EXTERN_C struct fb_CryptKey* fb_ClientBlock_newKey(struct fb_ClientBlock* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_AuthBlock* fb_ClientBlock_getAuthBlock(struct fb_ClientBlock* self, struct fb_Status* status);

#define fb_Server_VERSION 6

struct fb_Server;

struct fb_ServerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Server* self);
	int (*release)(struct fb_Server* self);
	void (*setOwner)(struct fb_Server* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_Server* self);
	int (*authenticate)(struct fb_Server* self, struct fb_Status* status, struct fb_ServerBlock* sBlock, struct fb_Writer* writerInterface);
	void (*setDbCryptCallback)(struct fb_Server* self, struct fb_Status* status, struct fb_CryptKeyCallback* cryptCallback);
};

struct fb_Server
{
	void* cloopDummy[1];
	struct fb_ServerVTable* vtable;
};

CLOOP_EXTERN_C void fb_Server_addRef(struct fb_Server* self);
CLOOP_EXTERN_C int fb_Server_release(struct fb_Server* self);
CLOOP_EXTERN_C void fb_Server_setOwner(struct fb_Server* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_Server_getOwner(struct fb_Server* self);
CLOOP_EXTERN_C int fb_Server_authenticate(struct fb_Server* self, struct fb_Status* status, struct fb_ServerBlock* sBlock, struct fb_Writer* writerInterface);
CLOOP_EXTERN_C void fb_Server_setDbCryptCallback(struct fb_Server* self, struct fb_Status* status, struct fb_CryptKeyCallback* cryptCallback);

#define fb_Client_VERSION 5

struct fb_Client;

struct fb_ClientVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Client* self);
	int (*release)(struct fb_Client* self);
	void (*setOwner)(struct fb_Client* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_Client* self);
	int (*authenticate)(struct fb_Client* self, struct fb_Status* status, struct fb_ClientBlock* cBlock);
};

struct fb_Client
{
	void* cloopDummy[1];
	struct fb_ClientVTable* vtable;
};

CLOOP_EXTERN_C void fb_Client_addRef(struct fb_Client* self);
CLOOP_EXTERN_C int fb_Client_release(struct fb_Client* self);
CLOOP_EXTERN_C void fb_Client_setOwner(struct fb_Client* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_Client_getOwner(struct fb_Client* self);
CLOOP_EXTERN_C int fb_Client_authenticate(struct fb_Client* self, struct fb_Status* status, struct fb_ClientBlock* cBlock);

#define fb_UserField_VERSION 2

struct fb_UserField;

struct fb_UserFieldVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*entered)(struct fb_UserField* self);
	int (*specified)(struct fb_UserField* self);
	void (*setEntered)(struct fb_UserField* self, struct fb_Status* status, int newValue);
};

struct fb_UserField
{
	void* cloopDummy[1];
	struct fb_UserFieldVTable* vtable;
};

CLOOP_EXTERN_C int fb_UserField_entered(struct fb_UserField* self);
CLOOP_EXTERN_C int fb_UserField_specified(struct fb_UserField* self);
CLOOP_EXTERN_C void fb_UserField_setEntered(struct fb_UserField* self, struct fb_Status* status, int newValue);

#define fb_CharUserField_VERSION 3

struct fb_CharUserField;

struct fb_CharUserFieldVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*entered)(struct fb_CharUserField* self);
	int (*specified)(struct fb_CharUserField* self);
	void (*setEntered)(struct fb_CharUserField* self, struct fb_Status* status, int newValue);
	const char* (*get)(struct fb_CharUserField* self);
	void (*set)(struct fb_CharUserField* self, struct fb_Status* status, const char* newValue);
};

struct fb_CharUserField
{
	void* cloopDummy[1];
	struct fb_CharUserFieldVTable* vtable;
};

CLOOP_EXTERN_C int fb_CharUserField_entered(struct fb_CharUserField* self);
CLOOP_EXTERN_C int fb_CharUserField_specified(struct fb_CharUserField* self);
CLOOP_EXTERN_C void fb_CharUserField_setEntered(struct fb_CharUserField* self, struct fb_Status* status, int newValue);
CLOOP_EXTERN_C const char* fb_CharUserField_get(struct fb_CharUserField* self);
CLOOP_EXTERN_C void fb_CharUserField_set(struct fb_CharUserField* self, struct fb_Status* status, const char* newValue);

#define fb_IntUserField_VERSION 3

struct fb_IntUserField;

struct fb_IntUserFieldVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	int (*entered)(struct fb_IntUserField* self);
	int (*specified)(struct fb_IntUserField* self);
	void (*setEntered)(struct fb_IntUserField* self, struct fb_Status* status, int newValue);
	int (*get)(struct fb_IntUserField* self);
	void (*set)(struct fb_IntUserField* self, struct fb_Status* status, int newValue);
};

struct fb_IntUserField
{
	void* cloopDummy[1];
	struct fb_IntUserFieldVTable* vtable;
};

CLOOP_EXTERN_C int fb_IntUserField_entered(struct fb_IntUserField* self);
CLOOP_EXTERN_C int fb_IntUserField_specified(struct fb_IntUserField* self);
CLOOP_EXTERN_C void fb_IntUserField_setEntered(struct fb_IntUserField* self, struct fb_Status* status, int newValue);
CLOOP_EXTERN_C int fb_IntUserField_get(struct fb_IntUserField* self);
CLOOP_EXTERN_C void fb_IntUserField_set(struct fb_IntUserField* self, struct fb_Status* status, int newValue);

#define fb_User_VERSION 2

#define fb_User_OP_USER_ADD ((unsigned) (1))
#define fb_User_OP_USER_MODIFY ((unsigned) (2))
#define fb_User_OP_USER_DELETE ((unsigned) (3))
#define fb_User_OP_USER_DISPLAY ((unsigned) (4))
#define fb_User_OP_USER_SET_MAP ((unsigned) (5))
#define fb_User_OP_USER_DROP_MAP ((unsigned) (6))

struct fb_User;

struct fb_UserVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*operation)(struct fb_User* self);
	struct fb_CharUserField* (*userName)(struct fb_User* self);
	struct fb_CharUserField* (*password)(struct fb_User* self);
	struct fb_CharUserField* (*firstName)(struct fb_User* self);
	struct fb_CharUserField* (*lastName)(struct fb_User* self);
	struct fb_CharUserField* (*middleName)(struct fb_User* self);
	struct fb_CharUserField* (*comment)(struct fb_User* self);
	struct fb_CharUserField* (*attributes)(struct fb_User* self);
	struct fb_IntUserField* (*active)(struct fb_User* self);
	struct fb_IntUserField* (*admin)(struct fb_User* self);
	void (*clear)(struct fb_User* self, struct fb_Status* status);
};

struct fb_User
{
	void* cloopDummy[1];
	struct fb_UserVTable* vtable;
};

CLOOP_EXTERN_C unsigned fb_User_operation(struct fb_User* self);
CLOOP_EXTERN_C struct fb_CharUserField* fb_User_userName(struct fb_User* self);
CLOOP_EXTERN_C struct fb_CharUserField* fb_User_password(struct fb_User* self);
CLOOP_EXTERN_C struct fb_CharUserField* fb_User_firstName(struct fb_User* self);
CLOOP_EXTERN_C struct fb_CharUserField* fb_User_lastName(struct fb_User* self);
CLOOP_EXTERN_C struct fb_CharUserField* fb_User_middleName(struct fb_User* self);
CLOOP_EXTERN_C struct fb_CharUserField* fb_User_comment(struct fb_User* self);
CLOOP_EXTERN_C struct fb_CharUserField* fb_User_attributes(struct fb_User* self);
CLOOP_EXTERN_C struct fb_IntUserField* fb_User_active(struct fb_User* self);
CLOOP_EXTERN_C struct fb_IntUserField* fb_User_admin(struct fb_User* self);
CLOOP_EXTERN_C void fb_User_clear(struct fb_User* self, struct fb_Status* status);

#define fb_ListUsers_VERSION 2

struct fb_ListUsers;

struct fb_ListUsersVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*list)(struct fb_ListUsers* self, struct fb_Status* status, struct fb_User* user);
};

struct fb_ListUsers
{
	void* cloopDummy[1];
	struct fb_ListUsersVTable* vtable;
};

CLOOP_EXTERN_C void fb_ListUsers_list(struct fb_ListUsers* self, struct fb_Status* status, struct fb_User* user);

#define fb_LogonInfo_VERSION 3

struct fb_LogonInfo;

struct fb_LogonInfoVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*name)(struct fb_LogonInfo* self);
	const char* (*role)(struct fb_LogonInfo* self);
	const char* (*networkProtocol)(struct fb_LogonInfo* self);
	const char* (*remoteAddress)(struct fb_LogonInfo* self);
	const unsigned char* (*authBlock)(struct fb_LogonInfo* self, unsigned* length);
	struct fb_Attachment* (*attachment)(struct fb_LogonInfo* self, struct fb_Status* status);
	struct fb_Transaction* (*transaction)(struct fb_LogonInfo* self, struct fb_Status* status);
};

struct fb_LogonInfo
{
	void* cloopDummy[1];
	struct fb_LogonInfoVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_LogonInfo_name(struct fb_LogonInfo* self);
CLOOP_EXTERN_C const char* fb_LogonInfo_role(struct fb_LogonInfo* self);
CLOOP_EXTERN_C const char* fb_LogonInfo_networkProtocol(struct fb_LogonInfo* self);
CLOOP_EXTERN_C const char* fb_LogonInfo_remoteAddress(struct fb_LogonInfo* self);
CLOOP_EXTERN_C const unsigned char* fb_LogonInfo_authBlock(struct fb_LogonInfo* self, unsigned* length);
CLOOP_EXTERN_C struct fb_Attachment* fb_LogonInfo_attachment(struct fb_LogonInfo* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_Transaction* fb_LogonInfo_transaction(struct fb_LogonInfo* self, struct fb_Status* status);

#define fb_Management_VERSION 4

struct fb_Management;

struct fb_ManagementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Management* self);
	int (*release)(struct fb_Management* self);
	void (*setOwner)(struct fb_Management* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_Management* self);
	void (*start)(struct fb_Management* self, struct fb_Status* status, struct fb_LogonInfo* logonInfo);
	int (*execute)(struct fb_Management* self, struct fb_Status* status, struct fb_User* user, struct fb_ListUsers* callback);
	void (*commit)(struct fb_Management* self, struct fb_Status* status);
	void (*rollback)(struct fb_Management* self, struct fb_Status* status);
};

struct fb_Management
{
	void* cloopDummy[1];
	struct fb_ManagementVTable* vtable;
};

CLOOP_EXTERN_C void fb_Management_addRef(struct fb_Management* self);
CLOOP_EXTERN_C int fb_Management_release(struct fb_Management* self);
CLOOP_EXTERN_C void fb_Management_setOwner(struct fb_Management* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_Management_getOwner(struct fb_Management* self);
CLOOP_EXTERN_C void fb_Management_start(struct fb_Management* self, struct fb_Status* status, struct fb_LogonInfo* logonInfo);
CLOOP_EXTERN_C int fb_Management_execute(struct fb_Management* self, struct fb_Status* status, struct fb_User* user, struct fb_ListUsers* callback);
CLOOP_EXTERN_C void fb_Management_commit(struct fb_Management* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Management_rollback(struct fb_Management* self, struct fb_Status* status);

#define fb_AuthBlock_VERSION 2

struct fb_AuthBlock;

struct fb_AuthBlockVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getType)(struct fb_AuthBlock* self);
	const char* (*getName)(struct fb_AuthBlock* self);
	const char* (*getPlugin)(struct fb_AuthBlock* self);
	const char* (*getSecurityDb)(struct fb_AuthBlock* self);
	const char* (*getOriginalPlugin)(struct fb_AuthBlock* self);
	FB_BOOLEAN (*next)(struct fb_AuthBlock* self, struct fb_Status* status);
	FB_BOOLEAN (*first)(struct fb_AuthBlock* self, struct fb_Status* status);
};

struct fb_AuthBlock
{
	void* cloopDummy[1];
	struct fb_AuthBlockVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_AuthBlock_getType(struct fb_AuthBlock* self);
CLOOP_EXTERN_C const char* fb_AuthBlock_getName(struct fb_AuthBlock* self);
CLOOP_EXTERN_C const char* fb_AuthBlock_getPlugin(struct fb_AuthBlock* self);
CLOOP_EXTERN_C const char* fb_AuthBlock_getSecurityDb(struct fb_AuthBlock* self);
CLOOP_EXTERN_C const char* fb_AuthBlock_getOriginalPlugin(struct fb_AuthBlock* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_AuthBlock_next(struct fb_AuthBlock* self, struct fb_Status* status);
CLOOP_EXTERN_C FB_BOOLEAN fb_AuthBlock_first(struct fb_AuthBlock* self, struct fb_Status* status);

#define fb_WireCryptPlugin_VERSION 5

struct fb_WireCryptPlugin;

struct fb_WireCryptPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_WireCryptPlugin* self);
	int (*release)(struct fb_WireCryptPlugin* self);
	void (*setOwner)(struct fb_WireCryptPlugin* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_WireCryptPlugin* self);
	const char* (*getKnownTypes)(struct fb_WireCryptPlugin* self, struct fb_Status* status);
	void (*setKey)(struct fb_WireCryptPlugin* self, struct fb_Status* status, struct fb_CryptKey* key);
	void (*encrypt)(struct fb_WireCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
	void (*decrypt)(struct fb_WireCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
	const unsigned char* (*getSpecificData)(struct fb_WireCryptPlugin* self, struct fb_Status* status, const char* keyType, unsigned* length);
	void (*setSpecificData)(struct fb_WireCryptPlugin* self, struct fb_Status* status, const char* keyType, unsigned length, const unsigned char* data);
};

struct fb_WireCryptPlugin
{
	void* cloopDummy[1];
	struct fb_WireCryptPluginVTable* vtable;
};

CLOOP_EXTERN_C void fb_WireCryptPlugin_addRef(struct fb_WireCryptPlugin* self);
CLOOP_EXTERN_C int fb_WireCryptPlugin_release(struct fb_WireCryptPlugin* self);
CLOOP_EXTERN_C void fb_WireCryptPlugin_setOwner(struct fb_WireCryptPlugin* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_WireCryptPlugin_getOwner(struct fb_WireCryptPlugin* self);
CLOOP_EXTERN_C const char* fb_WireCryptPlugin_getKnownTypes(struct fb_WireCryptPlugin* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_WireCryptPlugin_setKey(struct fb_WireCryptPlugin* self, struct fb_Status* status, struct fb_CryptKey* key);
CLOOP_EXTERN_C void fb_WireCryptPlugin_encrypt(struct fb_WireCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
CLOOP_EXTERN_C void fb_WireCryptPlugin_decrypt(struct fb_WireCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
CLOOP_EXTERN_C const unsigned char* fb_WireCryptPlugin_getSpecificData(struct fb_WireCryptPlugin* self, struct fb_Status* status, const char* keyType, unsigned* length);
CLOOP_EXTERN_C void fb_WireCryptPlugin_setSpecificData(struct fb_WireCryptPlugin* self, struct fb_Status* status, const char* keyType, unsigned length, const unsigned char* data);

#define fb_CryptKeyCallback_VERSION 2

struct fb_CryptKeyCallback;

struct fb_CryptKeyCallbackVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*callback)(struct fb_CryptKeyCallback* self, unsigned dataLength, const void* data, unsigned bufferLength, void* buffer);
};

struct fb_CryptKeyCallback
{
	void* cloopDummy[1];
	struct fb_CryptKeyCallbackVTable* vtable;
};

CLOOP_EXTERN_C unsigned fb_CryptKeyCallback_callback(struct fb_CryptKeyCallback* self, unsigned dataLength, const void* data, unsigned bufferLength, void* buffer);

#define fb_KeyHolderPlugin_VERSION 5

struct fb_KeyHolderPlugin;

struct fb_KeyHolderPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_KeyHolderPlugin* self);
	int (*release)(struct fb_KeyHolderPlugin* self);
	void (*setOwner)(struct fb_KeyHolderPlugin* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_KeyHolderPlugin* self);
	int (*keyCallback)(struct fb_KeyHolderPlugin* self, struct fb_Status* status, struct fb_CryptKeyCallback* callback);
	struct fb_CryptKeyCallback* (*keyHandle)(struct fb_KeyHolderPlugin* self, struct fb_Status* status, const char* keyName);
	FB_BOOLEAN (*useOnlyOwnKeys)(struct fb_KeyHolderPlugin* self, struct fb_Status* status);
	struct fb_CryptKeyCallback* (*chainHandle)(struct fb_KeyHolderPlugin* self, struct fb_Status* status);
};

struct fb_KeyHolderPlugin
{
	void* cloopDummy[1];
	struct fb_KeyHolderPluginVTable* vtable;
};

CLOOP_EXTERN_C void fb_KeyHolderPlugin_addRef(struct fb_KeyHolderPlugin* self);
CLOOP_EXTERN_C int fb_KeyHolderPlugin_release(struct fb_KeyHolderPlugin* self);
CLOOP_EXTERN_C void fb_KeyHolderPlugin_setOwner(struct fb_KeyHolderPlugin* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_KeyHolderPlugin_getOwner(struct fb_KeyHolderPlugin* self);
CLOOP_EXTERN_C int fb_KeyHolderPlugin_keyCallback(struct fb_KeyHolderPlugin* self, struct fb_Status* status, struct fb_CryptKeyCallback* callback);
CLOOP_EXTERN_C struct fb_CryptKeyCallback* fb_KeyHolderPlugin_keyHandle(struct fb_KeyHolderPlugin* self, struct fb_Status* status, const char* keyName);
CLOOP_EXTERN_C FB_BOOLEAN fb_KeyHolderPlugin_useOnlyOwnKeys(struct fb_KeyHolderPlugin* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_CryptKeyCallback* fb_KeyHolderPlugin_chainHandle(struct fb_KeyHolderPlugin* self, struct fb_Status* status);

#define fb_DbCryptInfo_VERSION 3

struct fb_DbCryptInfo;

struct fb_DbCryptInfoVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_DbCryptInfo* self);
	int (*release)(struct fb_DbCryptInfo* self);
	const char* (*getDatabaseFullPath)(struct fb_DbCryptInfo* self, struct fb_Status* status);
};

struct fb_DbCryptInfo
{
	void* cloopDummy[1];
	struct fb_DbCryptInfoVTable* vtable;
};

CLOOP_EXTERN_C void fb_DbCryptInfo_addRef(struct fb_DbCryptInfo* self);
CLOOP_EXTERN_C int fb_DbCryptInfo_release(struct fb_DbCryptInfo* self);
CLOOP_EXTERN_C const char* fb_DbCryptInfo_getDatabaseFullPath(struct fb_DbCryptInfo* self, struct fb_Status* status);

#define fb_DbCryptPlugin_VERSION 5

struct fb_DbCryptPlugin;

struct fb_DbCryptPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_DbCryptPlugin* self);
	int (*release)(struct fb_DbCryptPlugin* self);
	void (*setOwner)(struct fb_DbCryptPlugin* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_DbCryptPlugin* self);
	void (*setKey)(struct fb_DbCryptPlugin* self, struct fb_Status* status, unsigned length, struct fb_KeyHolderPlugin** sources, const char* keyName);
	void (*encrypt)(struct fb_DbCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
	void (*decrypt)(struct fb_DbCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
	void (*setInfo)(struct fb_DbCryptPlugin* self, struct fb_Status* status, struct fb_DbCryptInfo* info);
};

struct fb_DbCryptPlugin
{
	void* cloopDummy[1];
	struct fb_DbCryptPluginVTable* vtable;
};

CLOOP_EXTERN_C void fb_DbCryptPlugin_addRef(struct fb_DbCryptPlugin* self);
CLOOP_EXTERN_C int fb_DbCryptPlugin_release(struct fb_DbCryptPlugin* self);
CLOOP_EXTERN_C void fb_DbCryptPlugin_setOwner(struct fb_DbCryptPlugin* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_DbCryptPlugin_getOwner(struct fb_DbCryptPlugin* self);
CLOOP_EXTERN_C void fb_DbCryptPlugin_setKey(struct fb_DbCryptPlugin* self, struct fb_Status* status, unsigned length, struct fb_KeyHolderPlugin** sources, const char* keyName);
CLOOP_EXTERN_C void fb_DbCryptPlugin_encrypt(struct fb_DbCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
CLOOP_EXTERN_C void fb_DbCryptPlugin_decrypt(struct fb_DbCryptPlugin* self, struct fb_Status* status, unsigned length, const void* from, void* to);
CLOOP_EXTERN_C void fb_DbCryptPlugin_setInfo(struct fb_DbCryptPlugin* self, struct fb_Status* status, struct fb_DbCryptInfo* info);

#define fb_ExternalContext_VERSION 2

struct fb_ExternalContext;

struct fb_ExternalContextVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct fb_Master* (*getMaster)(struct fb_ExternalContext* self);
	struct fb_ExternalEngine* (*getEngine)(struct fb_ExternalContext* self, struct fb_Status* status);
	struct fb_Attachment* (*getAttachment)(struct fb_ExternalContext* self, struct fb_Status* status);
	struct fb_Transaction* (*getTransaction)(struct fb_ExternalContext* self, struct fb_Status* status);
	const char* (*getUserName)(struct fb_ExternalContext* self);
	const char* (*getDatabaseName)(struct fb_ExternalContext* self);
	const char* (*getClientCharSet)(struct fb_ExternalContext* self);
	int (*obtainInfoCode)(struct fb_ExternalContext* self);
	void* (*getInfo)(struct fb_ExternalContext* self, int code);
	void* (*setInfo)(struct fb_ExternalContext* self, int code, void* value);
};

struct fb_ExternalContext
{
	void* cloopDummy[1];
	struct fb_ExternalContextVTable* vtable;
};

CLOOP_EXTERN_C struct fb_Master* fb_ExternalContext_getMaster(struct fb_ExternalContext* self);
CLOOP_EXTERN_C struct fb_ExternalEngine* fb_ExternalContext_getEngine(struct fb_ExternalContext* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_Attachment* fb_ExternalContext_getAttachment(struct fb_ExternalContext* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_Transaction* fb_ExternalContext_getTransaction(struct fb_ExternalContext* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_ExternalContext_getUserName(struct fb_ExternalContext* self);
CLOOP_EXTERN_C const char* fb_ExternalContext_getDatabaseName(struct fb_ExternalContext* self);
CLOOP_EXTERN_C const char* fb_ExternalContext_getClientCharSet(struct fb_ExternalContext* self);
CLOOP_EXTERN_C int fb_ExternalContext_obtainInfoCode(struct fb_ExternalContext* self);
CLOOP_EXTERN_C void* fb_ExternalContext_getInfo(struct fb_ExternalContext* self, int code);
CLOOP_EXTERN_C void* fb_ExternalContext_setInfo(struct fb_ExternalContext* self, int code, void* value);

#define fb_ExternalResultSet_VERSION 3

struct fb_ExternalResultSet;

struct fb_ExternalResultSetVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_ExternalResultSet* self);
	FB_BOOLEAN (*fetch)(struct fb_ExternalResultSet* self, struct fb_Status* status);
};

struct fb_ExternalResultSet
{
	void* cloopDummy[1];
	struct fb_ExternalResultSetVTable* vtable;
};

CLOOP_EXTERN_C void fb_ExternalResultSet_dispose(struct fb_ExternalResultSet* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_ExternalResultSet_fetch(struct fb_ExternalResultSet* self, struct fb_Status* status);

#define fb_ExternalFunction_VERSION 3

struct fb_ExternalFunction;

struct fb_ExternalFunctionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_ExternalFunction* self);
	void (*getCharSet)(struct fb_ExternalFunction* self, struct fb_Status* status, struct fb_ExternalContext* context, char* name, unsigned nameSize);
	void (*execute)(struct fb_ExternalFunction* self, struct fb_Status* status, struct fb_ExternalContext* context, void* inMsg, void* outMsg);
};

struct fb_ExternalFunction
{
	void* cloopDummy[1];
	struct fb_ExternalFunctionVTable* vtable;
};

CLOOP_EXTERN_C void fb_ExternalFunction_dispose(struct fb_ExternalFunction* self);
CLOOP_EXTERN_C void fb_ExternalFunction_getCharSet(struct fb_ExternalFunction* self, struct fb_Status* status, struct fb_ExternalContext* context, char* name, unsigned nameSize);
CLOOP_EXTERN_C void fb_ExternalFunction_execute(struct fb_ExternalFunction* self, struct fb_Status* status, struct fb_ExternalContext* context, void* inMsg, void* outMsg);

#define fb_ExternalProcedure_VERSION 3

struct fb_ExternalProcedure;

struct fb_ExternalProcedureVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_ExternalProcedure* self);
	void (*getCharSet)(struct fb_ExternalProcedure* self, struct fb_Status* status, struct fb_ExternalContext* context, char* name, unsigned nameSize);
	struct fb_ExternalResultSet* (*open)(struct fb_ExternalProcedure* self, struct fb_Status* status, struct fb_ExternalContext* context, void* inMsg, void* outMsg);
};

struct fb_ExternalProcedure
{
	void* cloopDummy[1];
	struct fb_ExternalProcedureVTable* vtable;
};

CLOOP_EXTERN_C void fb_ExternalProcedure_dispose(struct fb_ExternalProcedure* self);
CLOOP_EXTERN_C void fb_ExternalProcedure_getCharSet(struct fb_ExternalProcedure* self, struct fb_Status* status, struct fb_ExternalContext* context, char* name, unsigned nameSize);
CLOOP_EXTERN_C struct fb_ExternalResultSet* fb_ExternalProcedure_open(struct fb_ExternalProcedure* self, struct fb_Status* status, struct fb_ExternalContext* context, void* inMsg, void* outMsg);

#define fb_ExternalTrigger_VERSION 3

#define fb_ExternalTrigger_TYPE_BEFORE ((unsigned) (1))
#define fb_ExternalTrigger_TYPE_AFTER ((unsigned) (2))
#define fb_ExternalTrigger_TYPE_DATABASE ((unsigned) (3))
#define fb_ExternalTrigger_ACTION_INSERT ((unsigned) (1))
#define fb_ExternalTrigger_ACTION_UPDATE ((unsigned) (2))
#define fb_ExternalTrigger_ACTION_DELETE ((unsigned) (3))
#define fb_ExternalTrigger_ACTION_CONNECT ((unsigned) (4))
#define fb_ExternalTrigger_ACTION_DISCONNECT ((unsigned) (5))
#define fb_ExternalTrigger_ACTION_TRANS_START ((unsigned) (6))
#define fb_ExternalTrigger_ACTION_TRANS_COMMIT ((unsigned) (7))
#define fb_ExternalTrigger_ACTION_TRANS_ROLLBACK ((unsigned) (8))
#define fb_ExternalTrigger_ACTION_DDL ((unsigned) (9))

struct fb_ExternalTrigger;

struct fb_ExternalTriggerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_ExternalTrigger* self);
	void (*getCharSet)(struct fb_ExternalTrigger* self, struct fb_Status* status, struct fb_ExternalContext* context, char* name, unsigned nameSize);
	void (*execute)(struct fb_ExternalTrigger* self, struct fb_Status* status, struct fb_ExternalContext* context, unsigned action, void* oldMsg, void* newMsg);
};

struct fb_ExternalTrigger
{
	void* cloopDummy[1];
	struct fb_ExternalTriggerVTable* vtable;
};

CLOOP_EXTERN_C void fb_ExternalTrigger_dispose(struct fb_ExternalTrigger* self);
CLOOP_EXTERN_C void fb_ExternalTrigger_getCharSet(struct fb_ExternalTrigger* self, struct fb_Status* status, struct fb_ExternalContext* context, char* name, unsigned nameSize);
CLOOP_EXTERN_C void fb_ExternalTrigger_execute(struct fb_ExternalTrigger* self, struct fb_Status* status, struct fb_ExternalContext* context, unsigned action, void* oldMsg, void* newMsg);

#define fb_RoutineMetadata_VERSION 2

struct fb_RoutineMetadata;

struct fb_RoutineMetadataVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getPackage)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	const char* (*getName)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	const char* (*getEntryPoint)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	const char* (*getBody)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getInputMetadata)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getOutputMetadata)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	struct fb_MessageMetadata* (*getTriggerMetadata)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	const char* (*getTriggerTable)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
	unsigned (*getTriggerType)(const struct fb_RoutineMetadata* self, struct fb_Status* status);
};

struct fb_RoutineMetadata
{
	void* cloopDummy[1];
	struct fb_RoutineMetadataVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_RoutineMetadata_getPackage(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_RoutineMetadata_getName(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_RoutineMetadata_getEntryPoint(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_RoutineMetadata_getBody(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_RoutineMetadata_getInputMetadata(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_RoutineMetadata_getOutputMetadata(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_MessageMetadata* fb_RoutineMetadata_getTriggerMetadata(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_RoutineMetadata_getTriggerTable(const struct fb_RoutineMetadata* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_RoutineMetadata_getTriggerType(const struct fb_RoutineMetadata* self, struct fb_Status* status);

#define fb_ExternalEngine_VERSION 4

struct fb_ExternalEngine;

struct fb_ExternalEngineVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_ExternalEngine* self);
	int (*release)(struct fb_ExternalEngine* self);
	void (*setOwner)(struct fb_ExternalEngine* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_ExternalEngine* self);
	void (*open)(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, char* charSet, unsigned charSetSize);
	void (*openAttachment)(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context);
	void (*closeAttachment)(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context);
	struct fb_ExternalFunction* (*makeFunction)(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
	struct fb_ExternalProcedure* (*makeProcedure)(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
	struct fb_ExternalTrigger* (*makeTrigger)(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* fieldsBuilder);
};

struct fb_ExternalEngine
{
	void* cloopDummy[1];
	struct fb_ExternalEngineVTable* vtable;
};

CLOOP_EXTERN_C void fb_ExternalEngine_addRef(struct fb_ExternalEngine* self);
CLOOP_EXTERN_C int fb_ExternalEngine_release(struct fb_ExternalEngine* self);
CLOOP_EXTERN_C void fb_ExternalEngine_setOwner(struct fb_ExternalEngine* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_ExternalEngine_getOwner(struct fb_ExternalEngine* self);
CLOOP_EXTERN_C void fb_ExternalEngine_open(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, char* charSet, unsigned charSetSize);
CLOOP_EXTERN_C void fb_ExternalEngine_openAttachment(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context);
CLOOP_EXTERN_C void fb_ExternalEngine_closeAttachment(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context);
CLOOP_EXTERN_C struct fb_ExternalFunction* fb_ExternalEngine_makeFunction(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct fb_ExternalProcedure* fb_ExternalEngine_makeProcedure(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct fb_ExternalTrigger* fb_ExternalEngine_makeTrigger(struct fb_ExternalEngine* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* fieldsBuilder);

#define fb_Timer_VERSION 3

struct fb_Timer;

struct fb_TimerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_Timer* self);
	int (*release)(struct fb_Timer* self);
	void (*handler)(struct fb_Timer* self);
};

struct fb_Timer
{
	void* cloopDummy[1];
	struct fb_TimerVTable* vtable;
};

CLOOP_EXTERN_C void fb_Timer_addRef(struct fb_Timer* self);
CLOOP_EXTERN_C int fb_Timer_release(struct fb_Timer* self);
CLOOP_EXTERN_C void fb_Timer_handler(struct fb_Timer* self);

#define fb_TimerControl_VERSION 2

struct fb_TimerControl;

struct fb_TimerControlVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*start)(struct fb_TimerControl* self, struct fb_Status* status, struct fb_Timer* timer, ISC_UINT64 microSeconds);
	void (*stop)(struct fb_TimerControl* self, struct fb_Status* status, struct fb_Timer* timer);
};

struct fb_TimerControl
{
	void* cloopDummy[1];
	struct fb_TimerControlVTable* vtable;
};

CLOOP_EXTERN_C void fb_TimerControl_start(struct fb_TimerControl* self, struct fb_Status* status, struct fb_Timer* timer, ISC_UINT64 microSeconds);
CLOOP_EXTERN_C void fb_TimerControl_stop(struct fb_TimerControl* self, struct fb_Status* status, struct fb_Timer* timer);

#define fb_VersionCallback_VERSION 2

struct fb_VersionCallback;

struct fb_VersionCallbackVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*callback)(struct fb_VersionCallback* self, struct fb_Status* status, const char* text);
};

struct fb_VersionCallback
{
	void* cloopDummy[1];
	struct fb_VersionCallbackVTable* vtable;
};

CLOOP_EXTERN_C void fb_VersionCallback_callback(struct fb_VersionCallback* self, struct fb_Status* status, const char* text);

#define fb_Util_VERSION 4

struct fb_Util;

struct fb_UtilVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*getFbVersion)(struct fb_Util* self, struct fb_Status* status, struct fb_Attachment* att, struct fb_VersionCallback* callback);
	void (*loadBlob)(struct fb_Util* self, struct fb_Status* status, ISC_QUAD* blobId, struct fb_Attachment* att, struct fb_Transaction* tra, const char* file, FB_BOOLEAN txt);
	void (*dumpBlob)(struct fb_Util* self, struct fb_Status* status, ISC_QUAD* blobId, struct fb_Attachment* att, struct fb_Transaction* tra, const char* file, FB_BOOLEAN txt);
	void (*getPerfCounters)(struct fb_Util* self, struct fb_Status* status, struct fb_Attachment* att, const char* countersSet, ISC_INT64* counters);
	struct fb_Attachment* (*executeCreateDatabase)(struct fb_Util* self, struct fb_Status* status, unsigned stmtLength, const char* creatDBstatement, unsigned dialect, FB_BOOLEAN* stmtIsCreateDb);
	void (*decodeDate)(struct fb_Util* self, ISC_DATE date, unsigned* year, unsigned* month, unsigned* day);
	void (*decodeTime)(struct fb_Util* self, ISC_TIME time, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions);
	ISC_DATE (*encodeDate)(struct fb_Util* self, unsigned year, unsigned month, unsigned day);
	ISC_TIME (*encodeTime)(struct fb_Util* self, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions);
	unsigned (*formatStatus)(struct fb_Util* self, char* buffer, unsigned bufferSize, struct fb_Status* status);
	unsigned (*getClientVersion)(struct fb_Util* self);
	struct fb_XpbBuilder* (*getXpbBuilder)(struct fb_Util* self, struct fb_Status* status, unsigned kind, const unsigned char* buf, unsigned len);
	unsigned (*setOffsets)(struct fb_Util* self, struct fb_Status* status, struct fb_MessageMetadata* metadata, struct fb_OffsetsCallback* callback);
	struct fb_DecFloat16* (*getDecFloat16)(struct fb_Util* self, struct fb_Status* status);
	struct fb_DecFloat34* (*getDecFloat34)(struct fb_Util* self, struct fb_Status* status);
	void (*decodeTimeTz)(struct fb_Util* self, struct fb_Status* status, const ISC_TIME_TZ* timeTz, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);
	void (*decodeTimeStampTz)(struct fb_Util* self, struct fb_Status* status, const ISC_TIMESTAMP_TZ* timeStampTz, unsigned* year, unsigned* month, unsigned* day, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);
	void (*encodeTimeTz)(struct fb_Util* self, struct fb_Status* status, ISC_TIME_TZ* timeTz, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions, const char* timeZone);
	void (*encodeTimeStampTz)(struct fb_Util* self, struct fb_Status* status, ISC_TIMESTAMP_TZ* timeStampTz, unsigned year, unsigned month, unsigned day, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions, const char* timeZone);
	struct fb_Int128* (*getInt128)(struct fb_Util* self, struct fb_Status* status);
	void (*decodeTimeTzEx)(struct fb_Util* self, struct fb_Status* status, const ISC_TIME_TZ_EX* timeTz, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);
	void (*decodeTimeStampTzEx)(struct fb_Util* self, struct fb_Status* status, const ISC_TIMESTAMP_TZ_EX* timeStampTz, unsigned* year, unsigned* month, unsigned* day, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);
};

struct fb_Util
{
	void* cloopDummy[1];
	struct fb_UtilVTable* vtable;
};

CLOOP_EXTERN_C void fb_Util_getFbVersion(struct fb_Util* self, struct fb_Status* status, struct fb_Attachment* att, struct fb_VersionCallback* callback);
CLOOP_EXTERN_C void fb_Util_loadBlob(struct fb_Util* self, struct fb_Status* status, ISC_QUAD* blobId, struct fb_Attachment* att, struct fb_Transaction* tra, const char* file, FB_BOOLEAN txt);
CLOOP_EXTERN_C void fb_Util_dumpBlob(struct fb_Util* self, struct fb_Status* status, ISC_QUAD* blobId, struct fb_Attachment* att, struct fb_Transaction* tra, const char* file, FB_BOOLEAN txt);
CLOOP_EXTERN_C void fb_Util_getPerfCounters(struct fb_Util* self, struct fb_Status* status, struct fb_Attachment* att, const char* countersSet, ISC_INT64* counters);
CLOOP_EXTERN_C struct fb_Attachment* fb_Util_executeCreateDatabase(struct fb_Util* self, struct fb_Status* status, unsigned stmtLength, const char* creatDBstatement, unsigned dialect, FB_BOOLEAN* stmtIsCreateDb);
CLOOP_EXTERN_C void fb_Util_decodeDate(struct fb_Util* self, ISC_DATE date, unsigned* year, unsigned* month, unsigned* day);
CLOOP_EXTERN_C void fb_Util_decodeTime(struct fb_Util* self, ISC_TIME time, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions);
CLOOP_EXTERN_C ISC_DATE fb_Util_encodeDate(struct fb_Util* self, unsigned year, unsigned month, unsigned day);
CLOOP_EXTERN_C ISC_TIME fb_Util_encodeTime(struct fb_Util* self, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions);
CLOOP_EXTERN_C unsigned fb_Util_formatStatus(struct fb_Util* self, char* buffer, unsigned bufferSize, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_Util_getClientVersion(struct fb_Util* self);
CLOOP_EXTERN_C struct fb_XpbBuilder* fb_Util_getXpbBuilder(struct fb_Util* self, struct fb_Status* status, unsigned kind, const unsigned char* buf, unsigned len);
CLOOP_EXTERN_C unsigned fb_Util_setOffsets(struct fb_Util* self, struct fb_Status* status, struct fb_MessageMetadata* metadata, struct fb_OffsetsCallback* callback);
CLOOP_EXTERN_C struct fb_DecFloat16* fb_Util_getDecFloat16(struct fb_Util* self, struct fb_Status* status);
CLOOP_EXTERN_C struct fb_DecFloat34* fb_Util_getDecFloat34(struct fb_Util* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Util_decodeTimeTz(struct fb_Util* self, struct fb_Status* status, const ISC_TIME_TZ* timeTz, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);
CLOOP_EXTERN_C void fb_Util_decodeTimeStampTz(struct fb_Util* self, struct fb_Status* status, const ISC_TIMESTAMP_TZ* timeStampTz, unsigned* year, unsigned* month, unsigned* day, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);
CLOOP_EXTERN_C void fb_Util_encodeTimeTz(struct fb_Util* self, struct fb_Status* status, ISC_TIME_TZ* timeTz, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions, const char* timeZone);
CLOOP_EXTERN_C void fb_Util_encodeTimeStampTz(struct fb_Util* self, struct fb_Status* status, ISC_TIMESTAMP_TZ* timeStampTz, unsigned year, unsigned month, unsigned day, unsigned hours, unsigned minutes, unsigned seconds, unsigned fractions, const char* timeZone);
CLOOP_EXTERN_C struct fb_Int128* fb_Util_getInt128(struct fb_Util* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_Util_decodeTimeTzEx(struct fb_Util* self, struct fb_Status* status, const ISC_TIME_TZ_EX* timeTz, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);
CLOOP_EXTERN_C void fb_Util_decodeTimeStampTzEx(struct fb_Util* self, struct fb_Status* status, const ISC_TIMESTAMP_TZ_EX* timeStampTz, unsigned* year, unsigned* month, unsigned* day, unsigned* hours, unsigned* minutes, unsigned* seconds, unsigned* fractions, unsigned timeZoneBufferLength, char* timeZoneBuffer);

#define fb_OffsetsCallback_VERSION 2

struct fb_OffsetsCallback;

struct fb_OffsetsCallbackVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*setOffset)(struct fb_OffsetsCallback* self, struct fb_Status* status, unsigned index, unsigned offset, unsigned nullOffset);
};

struct fb_OffsetsCallback
{
	void* cloopDummy[1];
	struct fb_OffsetsCallbackVTable* vtable;
};

CLOOP_EXTERN_C void fb_OffsetsCallback_setOffset(struct fb_OffsetsCallback* self, struct fb_Status* status, unsigned index, unsigned offset, unsigned nullOffset);

#define fb_XpbBuilder_VERSION 3

#define fb_XpbBuilder_DPB ((unsigned) (1))
#define fb_XpbBuilder_SPB_ATTACH ((unsigned) (2))
#define fb_XpbBuilder_SPB_START ((unsigned) (3))
#define fb_XpbBuilder_TPB ((unsigned) (4))
#define fb_XpbBuilder_BATCH ((unsigned) (5))
#define fb_XpbBuilder_BPB ((unsigned) (6))
#define fb_XpbBuilder_SPB_SEND ((unsigned) (7))
#define fb_XpbBuilder_SPB_RECEIVE ((unsigned) (8))
#define fb_XpbBuilder_SPB_RESPONSE ((unsigned) (9))
#define fb_XpbBuilder_INFO_SEND ((unsigned) (10))
#define fb_XpbBuilder_INFO_RESPONSE ((unsigned) (11))

struct fb_XpbBuilder;

struct fb_XpbBuilderVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_XpbBuilder* self);
	void (*clear)(struct fb_XpbBuilder* self, struct fb_Status* status);
	void (*removeCurrent)(struct fb_XpbBuilder* self, struct fb_Status* status);
	void (*insertInt)(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, int value);
	void (*insertBigInt)(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, ISC_INT64 value);
	void (*insertBytes)(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, const void* bytes, unsigned length);
	void (*insertString)(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, const char* str);
	void (*insertTag)(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag);
	FB_BOOLEAN (*isEof)(struct fb_XpbBuilder* self, struct fb_Status* status);
	void (*moveNext)(struct fb_XpbBuilder* self, struct fb_Status* status);
	void (*rewind)(struct fb_XpbBuilder* self, struct fb_Status* status);
	FB_BOOLEAN (*findFirst)(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag);
	FB_BOOLEAN (*findNext)(struct fb_XpbBuilder* self, struct fb_Status* status);
	unsigned char (*getTag)(struct fb_XpbBuilder* self, struct fb_Status* status);
	unsigned (*getLength)(struct fb_XpbBuilder* self, struct fb_Status* status);
	int (*getInt)(struct fb_XpbBuilder* self, struct fb_Status* status);
	ISC_INT64 (*getBigInt)(struct fb_XpbBuilder* self, struct fb_Status* status);
	const char* (*getString)(struct fb_XpbBuilder* self, struct fb_Status* status);
	const unsigned char* (*getBytes)(struct fb_XpbBuilder* self, struct fb_Status* status);
	unsigned (*getBufferLength)(struct fb_XpbBuilder* self, struct fb_Status* status);
	const unsigned char* (*getBuffer)(struct fb_XpbBuilder* self, struct fb_Status* status);
};

struct fb_XpbBuilder
{
	void* cloopDummy[1];
	struct fb_XpbBuilderVTable* vtable;
};

CLOOP_EXTERN_C void fb_XpbBuilder_dispose(struct fb_XpbBuilder* self);
CLOOP_EXTERN_C void fb_XpbBuilder_clear(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_XpbBuilder_removeCurrent(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_XpbBuilder_insertInt(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, int value);
CLOOP_EXTERN_C void fb_XpbBuilder_insertBigInt(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, ISC_INT64 value);
CLOOP_EXTERN_C void fb_XpbBuilder_insertBytes(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, const void* bytes, unsigned length);
CLOOP_EXTERN_C void fb_XpbBuilder_insertString(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag, const char* str);
CLOOP_EXTERN_C void fb_XpbBuilder_insertTag(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag);
CLOOP_EXTERN_C FB_BOOLEAN fb_XpbBuilder_isEof(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_XpbBuilder_moveNext(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_XpbBuilder_rewind(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C FB_BOOLEAN fb_XpbBuilder_findFirst(struct fb_XpbBuilder* self, struct fb_Status* status, unsigned char tag);
CLOOP_EXTERN_C FB_BOOLEAN fb_XpbBuilder_findNext(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned char fb_XpbBuilder_getTag(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_XpbBuilder_getLength(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C int fb_XpbBuilder_getInt(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C ISC_INT64 fb_XpbBuilder_getBigInt(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C const char* fb_XpbBuilder_getString(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C const unsigned char* fb_XpbBuilder_getBytes(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C unsigned fb_XpbBuilder_getBufferLength(struct fb_XpbBuilder* self, struct fb_Status* status);
CLOOP_EXTERN_C const unsigned char* fb_XpbBuilder_getBuffer(struct fb_XpbBuilder* self, struct fb_Status* status);

#define fb_TraceConnection_VERSION 2

#define fb_TraceConnection_KIND_DATABASE ((unsigned) (1))
#define fb_TraceConnection_KIND_SERVICE ((unsigned) (2))

struct fb_TraceConnection;

struct fb_TraceConnectionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getKind)(struct fb_TraceConnection* self);
	int (*getProcessID)(struct fb_TraceConnection* self);
	const char* (*getUserName)(struct fb_TraceConnection* self);
	const char* (*getRoleName)(struct fb_TraceConnection* self);
	const char* (*getCharSet)(struct fb_TraceConnection* self);
	const char* (*getRemoteProtocol)(struct fb_TraceConnection* self);
	const char* (*getRemoteAddress)(struct fb_TraceConnection* self);
	int (*getRemoteProcessID)(struct fb_TraceConnection* self);
	const char* (*getRemoteProcessName)(struct fb_TraceConnection* self);
};

struct fb_TraceConnection
{
	void* cloopDummy[1];
	struct fb_TraceConnectionVTable* vtable;
};

CLOOP_EXTERN_C unsigned fb_TraceConnection_getKind(struct fb_TraceConnection* self);
CLOOP_EXTERN_C int fb_TraceConnection_getProcessID(struct fb_TraceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceConnection_getUserName(struct fb_TraceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceConnection_getRoleName(struct fb_TraceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceConnection_getCharSet(struct fb_TraceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceConnection_getRemoteProtocol(struct fb_TraceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceConnection_getRemoteAddress(struct fb_TraceConnection* self);
CLOOP_EXTERN_C int fb_TraceConnection_getRemoteProcessID(struct fb_TraceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceConnection_getRemoteProcessName(struct fb_TraceConnection* self);

#define fb_TraceDatabaseConnection_VERSION 3

struct fb_TraceDatabaseConnection;

struct fb_TraceDatabaseConnectionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getKind)(struct fb_TraceDatabaseConnection* self);
	int (*getProcessID)(struct fb_TraceDatabaseConnection* self);
	const char* (*getUserName)(struct fb_TraceDatabaseConnection* self);
	const char* (*getRoleName)(struct fb_TraceDatabaseConnection* self);
	const char* (*getCharSet)(struct fb_TraceDatabaseConnection* self);
	const char* (*getRemoteProtocol)(struct fb_TraceDatabaseConnection* self);
	const char* (*getRemoteAddress)(struct fb_TraceDatabaseConnection* self);
	int (*getRemoteProcessID)(struct fb_TraceDatabaseConnection* self);
	const char* (*getRemoteProcessName)(struct fb_TraceDatabaseConnection* self);
	ISC_INT64 (*getConnectionID)(struct fb_TraceDatabaseConnection* self);
	const char* (*getDatabaseName)(struct fb_TraceDatabaseConnection* self);
};

struct fb_TraceDatabaseConnection
{
	void* cloopDummy[1];
	struct fb_TraceDatabaseConnectionVTable* vtable;
};

CLOOP_EXTERN_C unsigned fb_TraceDatabaseConnection_getKind(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C int fb_TraceDatabaseConnection_getProcessID(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* fb_TraceDatabaseConnection_getUserName(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* fb_TraceDatabaseConnection_getRoleName(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* fb_TraceDatabaseConnection_getCharSet(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* fb_TraceDatabaseConnection_getRemoteProtocol(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* fb_TraceDatabaseConnection_getRemoteAddress(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C int fb_TraceDatabaseConnection_getRemoteProcessID(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* fb_TraceDatabaseConnection_getRemoteProcessName(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceDatabaseConnection_getConnectionID(struct fb_TraceDatabaseConnection* self);
CLOOP_EXTERN_C const char* fb_TraceDatabaseConnection_getDatabaseName(struct fb_TraceDatabaseConnection* self);

#define fb_TraceTransaction_VERSION 3

#define fb_TraceTransaction_ISOLATION_CONSISTENCY ((unsigned) (1))
#define fb_TraceTransaction_ISOLATION_CONCURRENCY ((unsigned) (2))
#define fb_TraceTransaction_ISOLATION_READ_COMMITTED_RECVER ((unsigned) (3))
#define fb_TraceTransaction_ISOLATION_READ_COMMITTED_NORECVER ((unsigned) (4))
#define fb_TraceTransaction_ISOLATION_READ_COMMITTED_READ_CONSISTENCY ((unsigned) (5))

struct fb_TraceTransaction;

struct fb_TraceTransactionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	ISC_INT64 (*getTransactionID)(struct fb_TraceTransaction* self);
	FB_BOOLEAN (*getReadOnly)(struct fb_TraceTransaction* self);
	int (*getWait)(struct fb_TraceTransaction* self);
	unsigned (*getIsolation)(struct fb_TraceTransaction* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceTransaction* self);
	ISC_INT64 (*getInitialID)(struct fb_TraceTransaction* self);
	ISC_INT64 (*getPreviousID)(struct fb_TraceTransaction* self);
};

struct fb_TraceTransaction
{
	void* cloopDummy[1];
	struct fb_TraceTransactionVTable* vtable;
};

CLOOP_EXTERN_C ISC_INT64 fb_TraceTransaction_getTransactionID(struct fb_TraceTransaction* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_TraceTransaction_getReadOnly(struct fb_TraceTransaction* self);
CLOOP_EXTERN_C int fb_TraceTransaction_getWait(struct fb_TraceTransaction* self);
CLOOP_EXTERN_C unsigned fb_TraceTransaction_getIsolation(struct fb_TraceTransaction* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceTransaction_getPerf(struct fb_TraceTransaction* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceTransaction_getInitialID(struct fb_TraceTransaction* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceTransaction_getPreviousID(struct fb_TraceTransaction* self);

#define fb_TraceParams_VERSION 3

struct fb_TraceParams;

struct fb_TraceParamsVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getCount)(struct fb_TraceParams* self);
	const struct dsc* (*getParam)(struct fb_TraceParams* self, unsigned idx);
	const char* (*getTextUTF8)(struct fb_TraceParams* self, struct fb_Status* status, unsigned idx);
};

struct fb_TraceParams
{
	void* cloopDummy[1];
	struct fb_TraceParamsVTable* vtable;
};

CLOOP_EXTERN_C unsigned fb_TraceParams_getCount(struct fb_TraceParams* self);
CLOOP_EXTERN_C const struct dsc* fb_TraceParams_getParam(struct fb_TraceParams* self, unsigned idx);
CLOOP_EXTERN_C const char* fb_TraceParams_getTextUTF8(struct fb_TraceParams* self, struct fb_Status* status, unsigned idx);

#define fb_TraceStatement_VERSION 2

struct fb_TraceStatement;

struct fb_TraceStatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	ISC_INT64 (*getStmtID)(struct fb_TraceStatement* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceStatement* self);
};

struct fb_TraceStatement
{
	void* cloopDummy[1];
	struct fb_TraceStatementVTable* vtable;
};

CLOOP_EXTERN_C ISC_INT64 fb_TraceStatement_getStmtID(struct fb_TraceStatement* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceStatement_getPerf(struct fb_TraceStatement* self);

#define fb_TraceSQLStatement_VERSION 3

struct fb_TraceSQLStatement;

struct fb_TraceSQLStatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	ISC_INT64 (*getStmtID)(struct fb_TraceSQLStatement* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceSQLStatement* self);
	const char* (*getText)(struct fb_TraceSQLStatement* self);
	const char* (*getPlan)(struct fb_TraceSQLStatement* self);
	struct fb_TraceParams* (*getInputs)(struct fb_TraceSQLStatement* self);
	const char* (*getTextUTF8)(struct fb_TraceSQLStatement* self);
	const char* (*getExplainedPlan)(struct fb_TraceSQLStatement* self);
};

struct fb_TraceSQLStatement
{
	void* cloopDummy[1];
	struct fb_TraceSQLStatementVTable* vtable;
};

CLOOP_EXTERN_C ISC_INT64 fb_TraceSQLStatement_getStmtID(struct fb_TraceSQLStatement* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceSQLStatement_getPerf(struct fb_TraceSQLStatement* self);
CLOOP_EXTERN_C const char* fb_TraceSQLStatement_getText(struct fb_TraceSQLStatement* self);
CLOOP_EXTERN_C const char* fb_TraceSQLStatement_getPlan(struct fb_TraceSQLStatement* self);
CLOOP_EXTERN_C struct fb_TraceParams* fb_TraceSQLStatement_getInputs(struct fb_TraceSQLStatement* self);
CLOOP_EXTERN_C const char* fb_TraceSQLStatement_getTextUTF8(struct fb_TraceSQLStatement* self);
CLOOP_EXTERN_C const char* fb_TraceSQLStatement_getExplainedPlan(struct fb_TraceSQLStatement* self);

#define fb_TraceBLRStatement_VERSION 3

struct fb_TraceBLRStatement;

struct fb_TraceBLRStatementVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	ISC_INT64 (*getStmtID)(struct fb_TraceBLRStatement* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceBLRStatement* self);
	const unsigned char* (*getData)(struct fb_TraceBLRStatement* self);
	unsigned (*getDataLength)(struct fb_TraceBLRStatement* self);
	const char* (*getText)(struct fb_TraceBLRStatement* self);
};

struct fb_TraceBLRStatement
{
	void* cloopDummy[1];
	struct fb_TraceBLRStatementVTable* vtable;
};

CLOOP_EXTERN_C ISC_INT64 fb_TraceBLRStatement_getStmtID(struct fb_TraceBLRStatement* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceBLRStatement_getPerf(struct fb_TraceBLRStatement* self);
CLOOP_EXTERN_C const unsigned char* fb_TraceBLRStatement_getData(struct fb_TraceBLRStatement* self);
CLOOP_EXTERN_C unsigned fb_TraceBLRStatement_getDataLength(struct fb_TraceBLRStatement* self);
CLOOP_EXTERN_C const char* fb_TraceBLRStatement_getText(struct fb_TraceBLRStatement* self);

#define fb_TraceDYNRequest_VERSION 2

struct fb_TraceDYNRequest;

struct fb_TraceDYNRequestVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const unsigned char* (*getData)(struct fb_TraceDYNRequest* self);
	unsigned (*getDataLength)(struct fb_TraceDYNRequest* self);
	const char* (*getText)(struct fb_TraceDYNRequest* self);
};

struct fb_TraceDYNRequest
{
	void* cloopDummy[1];
	struct fb_TraceDYNRequestVTable* vtable;
};

CLOOP_EXTERN_C const unsigned char* fb_TraceDYNRequest_getData(struct fb_TraceDYNRequest* self);
CLOOP_EXTERN_C unsigned fb_TraceDYNRequest_getDataLength(struct fb_TraceDYNRequest* self);
CLOOP_EXTERN_C const char* fb_TraceDYNRequest_getText(struct fb_TraceDYNRequest* self);

#define fb_TraceContextVariable_VERSION 2

struct fb_TraceContextVariable;

struct fb_TraceContextVariableVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getNameSpace)(struct fb_TraceContextVariable* self);
	const char* (*getVarName)(struct fb_TraceContextVariable* self);
	const char* (*getVarValue)(struct fb_TraceContextVariable* self);
};

struct fb_TraceContextVariable
{
	void* cloopDummy[1];
	struct fb_TraceContextVariableVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_TraceContextVariable_getNameSpace(struct fb_TraceContextVariable* self);
CLOOP_EXTERN_C const char* fb_TraceContextVariable_getVarName(struct fb_TraceContextVariable* self);
CLOOP_EXTERN_C const char* fb_TraceContextVariable_getVarValue(struct fb_TraceContextVariable* self);

#define fb_TraceProcedure_VERSION 3

struct fb_TraceProcedure;

struct fb_TraceProcedureVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getProcName)(struct fb_TraceProcedure* self);
	struct fb_TraceParams* (*getInputs)(struct fb_TraceProcedure* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceProcedure* self);
	ISC_INT64 (*getStmtID)(struct fb_TraceProcedure* self);
	const char* (*getPlan)(struct fb_TraceProcedure* self);
	const char* (*getExplainedPlan)(struct fb_TraceProcedure* self);
};

struct fb_TraceProcedure
{
	void* cloopDummy[1];
	struct fb_TraceProcedureVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_TraceProcedure_getProcName(struct fb_TraceProcedure* self);
CLOOP_EXTERN_C struct fb_TraceParams* fb_TraceProcedure_getInputs(struct fb_TraceProcedure* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceProcedure_getPerf(struct fb_TraceProcedure* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceProcedure_getStmtID(struct fb_TraceProcedure* self);
CLOOP_EXTERN_C const char* fb_TraceProcedure_getPlan(struct fb_TraceProcedure* self);
CLOOP_EXTERN_C const char* fb_TraceProcedure_getExplainedPlan(struct fb_TraceProcedure* self);

#define fb_TraceFunction_VERSION 3

struct fb_TraceFunction;

struct fb_TraceFunctionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getFuncName)(struct fb_TraceFunction* self);
	struct fb_TraceParams* (*getInputs)(struct fb_TraceFunction* self);
	struct fb_TraceParams* (*getResult)(struct fb_TraceFunction* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceFunction* self);
	ISC_INT64 (*getStmtID)(struct fb_TraceFunction* self);
	const char* (*getPlan)(struct fb_TraceFunction* self);
	const char* (*getExplainedPlan)(struct fb_TraceFunction* self);
};

struct fb_TraceFunction
{
	void* cloopDummy[1];
	struct fb_TraceFunctionVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_TraceFunction_getFuncName(struct fb_TraceFunction* self);
CLOOP_EXTERN_C struct fb_TraceParams* fb_TraceFunction_getInputs(struct fb_TraceFunction* self);
CLOOP_EXTERN_C struct fb_TraceParams* fb_TraceFunction_getResult(struct fb_TraceFunction* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceFunction_getPerf(struct fb_TraceFunction* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceFunction_getStmtID(struct fb_TraceFunction* self);
CLOOP_EXTERN_C const char* fb_TraceFunction_getPlan(struct fb_TraceFunction* self);
CLOOP_EXTERN_C const char* fb_TraceFunction_getExplainedPlan(struct fb_TraceFunction* self);

#define fb_TraceTrigger_VERSION 3

#define fb_TraceTrigger_TYPE_ALL ((unsigned) (0))
#define fb_TraceTrigger_TYPE_BEFORE ((unsigned) (1))
#define fb_TraceTrigger_TYPE_AFTER ((unsigned) (2))

struct fb_TraceTrigger;

struct fb_TraceTriggerVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getTriggerName)(struct fb_TraceTrigger* self);
	const char* (*getRelationName)(struct fb_TraceTrigger* self);
	int (*getAction)(struct fb_TraceTrigger* self);
	int (*getWhich)(struct fb_TraceTrigger* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceTrigger* self);
	ISC_INT64 (*getStmtID)(struct fb_TraceTrigger* self);
	const char* (*getPlan)(struct fb_TraceTrigger* self);
	const char* (*getExplainedPlan)(struct fb_TraceTrigger* self);
};

struct fb_TraceTrigger
{
	void* cloopDummy[1];
	struct fb_TraceTriggerVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_TraceTrigger_getTriggerName(struct fb_TraceTrigger* self);
CLOOP_EXTERN_C const char* fb_TraceTrigger_getRelationName(struct fb_TraceTrigger* self);
CLOOP_EXTERN_C int fb_TraceTrigger_getAction(struct fb_TraceTrigger* self);
CLOOP_EXTERN_C int fb_TraceTrigger_getWhich(struct fb_TraceTrigger* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceTrigger_getPerf(struct fb_TraceTrigger* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceTrigger_getStmtID(struct fb_TraceTrigger* self);
CLOOP_EXTERN_C const char* fb_TraceTrigger_getPlan(struct fb_TraceTrigger* self);
CLOOP_EXTERN_C const char* fb_TraceTrigger_getExplainedPlan(struct fb_TraceTrigger* self);

#define fb_TraceServiceConnection_VERSION 3

struct fb_TraceServiceConnection;

struct fb_TraceServiceConnectionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getKind)(struct fb_TraceServiceConnection* self);
	int (*getProcessID)(struct fb_TraceServiceConnection* self);
	const char* (*getUserName)(struct fb_TraceServiceConnection* self);
	const char* (*getRoleName)(struct fb_TraceServiceConnection* self);
	const char* (*getCharSet)(struct fb_TraceServiceConnection* self);
	const char* (*getRemoteProtocol)(struct fb_TraceServiceConnection* self);
	const char* (*getRemoteAddress)(struct fb_TraceServiceConnection* self);
	int (*getRemoteProcessID)(struct fb_TraceServiceConnection* self);
	const char* (*getRemoteProcessName)(struct fb_TraceServiceConnection* self);
	void* (*getServiceID)(struct fb_TraceServiceConnection* self);
	const char* (*getServiceMgr)(struct fb_TraceServiceConnection* self);
	const char* (*getServiceName)(struct fb_TraceServiceConnection* self);
};

struct fb_TraceServiceConnection
{
	void* cloopDummy[1];
	struct fb_TraceServiceConnectionVTable* vtable;
};

CLOOP_EXTERN_C unsigned fb_TraceServiceConnection_getKind(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C int fb_TraceServiceConnection_getProcessID(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getUserName(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getRoleName(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getCharSet(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getRemoteProtocol(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getRemoteAddress(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C int fb_TraceServiceConnection_getRemoteProcessID(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getRemoteProcessName(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C void* fb_TraceServiceConnection_getServiceID(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getServiceMgr(struct fb_TraceServiceConnection* self);
CLOOP_EXTERN_C const char* fb_TraceServiceConnection_getServiceName(struct fb_TraceServiceConnection* self);

#define fb_TraceStatusVector_VERSION 2

struct fb_TraceStatusVector;

struct fb_TraceStatusVectorVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	FB_BOOLEAN (*hasError)(struct fb_TraceStatusVector* self);
	FB_BOOLEAN (*hasWarning)(struct fb_TraceStatusVector* self);
	struct fb_Status* (*getStatus)(struct fb_TraceStatusVector* self);
	const char* (*getText)(struct fb_TraceStatusVector* self);
};

struct fb_TraceStatusVector
{
	void* cloopDummy[1];
	struct fb_TraceStatusVectorVTable* vtable;
};

CLOOP_EXTERN_C FB_BOOLEAN fb_TraceStatusVector_hasError(struct fb_TraceStatusVector* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_TraceStatusVector_hasWarning(struct fb_TraceStatusVector* self);
CLOOP_EXTERN_C struct fb_Status* fb_TraceStatusVector_getStatus(struct fb_TraceStatusVector* self);
CLOOP_EXTERN_C const char* fb_TraceStatusVector_getText(struct fb_TraceStatusVector* self);

#define fb_TraceSweepInfo_VERSION 2

struct fb_TraceSweepInfo;

struct fb_TraceSweepInfoVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	ISC_INT64 (*getOIT)(struct fb_TraceSweepInfo* self);
	ISC_INT64 (*getOST)(struct fb_TraceSweepInfo* self);
	ISC_INT64 (*getOAT)(struct fb_TraceSweepInfo* self);
	ISC_INT64 (*getNext)(struct fb_TraceSweepInfo* self);
	struct PerformanceInfo* (*getPerf)(struct fb_TraceSweepInfo* self);
};

struct fb_TraceSweepInfo
{
	void* cloopDummy[1];
	struct fb_TraceSweepInfoVTable* vtable;
};

CLOOP_EXTERN_C ISC_INT64 fb_TraceSweepInfo_getOIT(struct fb_TraceSweepInfo* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceSweepInfo_getOST(struct fb_TraceSweepInfo* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceSweepInfo_getOAT(struct fb_TraceSweepInfo* self);
CLOOP_EXTERN_C ISC_INT64 fb_TraceSweepInfo_getNext(struct fb_TraceSweepInfo* self);
CLOOP_EXTERN_C struct PerformanceInfo* fb_TraceSweepInfo_getPerf(struct fb_TraceSweepInfo* self);

#define fb_TraceLogWriter_VERSION 4

struct fb_TraceLogWriter;

struct fb_TraceLogWriterVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_TraceLogWriter* self);
	int (*release)(struct fb_TraceLogWriter* self);
	unsigned (*write)(struct fb_TraceLogWriter* self, const void* buf, unsigned size);
	unsigned (*write_s)(struct fb_TraceLogWriter* self, struct fb_Status* status, const void* buf, unsigned size);
};

struct fb_TraceLogWriter
{
	void* cloopDummy[1];
	struct fb_TraceLogWriterVTable* vtable;
};

CLOOP_EXTERN_C void fb_TraceLogWriter_addRef(struct fb_TraceLogWriter* self);
CLOOP_EXTERN_C int fb_TraceLogWriter_release(struct fb_TraceLogWriter* self);
CLOOP_EXTERN_C unsigned fb_TraceLogWriter_write(struct fb_TraceLogWriter* self, const void* buf, unsigned size);
CLOOP_EXTERN_C unsigned fb_TraceLogWriter_write_s(struct fb_TraceLogWriter* self, struct fb_Status* status, const void* buf, unsigned size);

#define fb_TraceInitInfo_VERSION 2

struct fb_TraceInitInfo;

struct fb_TraceInitInfoVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getConfigText)(struct fb_TraceInitInfo* self);
	int (*getTraceSessionID)(struct fb_TraceInitInfo* self);
	const char* (*getTraceSessionName)(struct fb_TraceInitInfo* self);
	const char* (*getFirebirdRootDirectory)(struct fb_TraceInitInfo* self);
	const char* (*getDatabaseName)(struct fb_TraceInitInfo* self);
	struct fb_TraceDatabaseConnection* (*getConnection)(struct fb_TraceInitInfo* self);
	struct fb_TraceLogWriter* (*getLogWriter)(struct fb_TraceInitInfo* self);
};

struct fb_TraceInitInfo
{
	void* cloopDummy[1];
	struct fb_TraceInitInfoVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_TraceInitInfo_getConfigText(struct fb_TraceInitInfo* self);
CLOOP_EXTERN_C int fb_TraceInitInfo_getTraceSessionID(struct fb_TraceInitInfo* self);
CLOOP_EXTERN_C const char* fb_TraceInitInfo_getTraceSessionName(struct fb_TraceInitInfo* self);
CLOOP_EXTERN_C const char* fb_TraceInitInfo_getFirebirdRootDirectory(struct fb_TraceInitInfo* self);
CLOOP_EXTERN_C const char* fb_TraceInitInfo_getDatabaseName(struct fb_TraceInitInfo* self);
CLOOP_EXTERN_C struct fb_TraceDatabaseConnection* fb_TraceInitInfo_getConnection(struct fb_TraceInitInfo* self);
CLOOP_EXTERN_C struct fb_TraceLogWriter* fb_TraceInitInfo_getLogWriter(struct fb_TraceInitInfo* self);

#define fb_TracePlugin_VERSION 5

#define fb_TracePlugin_RESULT_SUCCESS ((unsigned) (0))
#define fb_TracePlugin_RESULT_FAILED ((unsigned) (1))
#define fb_TracePlugin_RESULT_UNAUTHORIZED ((unsigned) (2))
#define fb_TracePlugin_SWEEP_STATE_STARTED ((unsigned) (1))
#define fb_TracePlugin_SWEEP_STATE_FINISHED ((unsigned) (2))
#define fb_TracePlugin_SWEEP_STATE_FAILED ((unsigned) (3))
#define fb_TracePlugin_SWEEP_STATE_PROGRESS ((unsigned) (4))

struct fb_TracePlugin;

struct fb_TracePluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_TracePlugin* self);
	int (*release)(struct fb_TracePlugin* self);
	const char* (*trace_get_error)(struct fb_TracePlugin* self);
	FB_BOOLEAN (*trace_attach)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, FB_BOOLEAN create_db, unsigned att_result);
	FB_BOOLEAN (*trace_detach)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, FB_BOOLEAN drop_db);
	FB_BOOLEAN (*trace_transaction_start)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, unsigned tpb_length, const unsigned char* tpb, unsigned tra_result);
	FB_BOOLEAN (*trace_transaction_end)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, FB_BOOLEAN commit, FB_BOOLEAN retain_context, unsigned tra_result);
	FB_BOOLEAN (*trace_proc_execute)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceProcedure* procedure, FB_BOOLEAN started, unsigned proc_result);
	FB_BOOLEAN (*trace_trigger_execute)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceTrigger* trigger, FB_BOOLEAN started, unsigned trig_result);
	FB_BOOLEAN (*trace_set_context)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceContextVariable* variable);
	FB_BOOLEAN (*trace_dsql_prepare)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceSQLStatement* statement, ISC_INT64 time_millis, unsigned req_result);
	FB_BOOLEAN (*trace_dsql_free)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceSQLStatement* statement, unsigned option);
	FB_BOOLEAN (*trace_dsql_execute)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceSQLStatement* statement, FB_BOOLEAN started, unsigned req_result);
	FB_BOOLEAN (*trace_blr_compile)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceBLRStatement* statement, ISC_INT64 time_millis, unsigned req_result);
	FB_BOOLEAN (*trace_blr_execute)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceBLRStatement* statement, unsigned req_result);
	FB_BOOLEAN (*trace_dyn_execute)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceDYNRequest* request, ISC_INT64 time_millis, unsigned req_result);
	FB_BOOLEAN (*trace_service_attach)(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned att_result);
	FB_BOOLEAN (*trace_service_start)(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned switches_length, const char* switches, unsigned start_result);
	FB_BOOLEAN (*trace_service_query)(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned send_item_length, const unsigned char* send_items, unsigned recv_item_length, const unsigned char* recv_items, unsigned query_result);
	FB_BOOLEAN (*trace_service_detach)(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned detach_result);
	FB_BOOLEAN (*trace_event_error)(struct fb_TracePlugin* self, struct fb_TraceConnection* connection, struct fb_TraceStatusVector* status, const char* function);
	FB_BOOLEAN (*trace_event_sweep)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceSweepInfo* sweep, unsigned sweep_state);
	FB_BOOLEAN (*trace_func_execute)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceFunction* function, FB_BOOLEAN started, unsigned func_result);
	FB_BOOLEAN (*trace_dsql_restart)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceSQLStatement* statement, unsigned number);
	FB_BOOLEAN (*trace_proc_compile)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceProcedure* procedure, ISC_INT64 time_millis, unsigned proc_result);
	FB_BOOLEAN (*trace_func_compile)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceFunction* function, ISC_INT64 time_millis, unsigned func_result);
	FB_BOOLEAN (*trace_trigger_compile)(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTrigger* trigger, ISC_INT64 time_millis, unsigned trig_result);
};

struct fb_TracePlugin
{
	void* cloopDummy[1];
	struct fb_TracePluginVTable* vtable;
};

CLOOP_EXTERN_C void fb_TracePlugin_addRef(struct fb_TracePlugin* self);
CLOOP_EXTERN_C int fb_TracePlugin_release(struct fb_TracePlugin* self);
CLOOP_EXTERN_C const char* fb_TracePlugin_trace_get_error(struct fb_TracePlugin* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_attach(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, FB_BOOLEAN create_db, unsigned att_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_detach(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, FB_BOOLEAN drop_db);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_transaction_start(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, unsigned tpb_length, const unsigned char* tpb, unsigned tra_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_transaction_end(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, FB_BOOLEAN commit, FB_BOOLEAN retain_context, unsigned tra_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_proc_execute(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceProcedure* procedure, FB_BOOLEAN started, unsigned proc_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_trigger_execute(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceTrigger* trigger, FB_BOOLEAN started, unsigned trig_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_set_context(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceContextVariable* variable);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_dsql_prepare(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceSQLStatement* statement, ISC_INT64 time_millis, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_dsql_free(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceSQLStatement* statement, unsigned option);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_dsql_execute(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceSQLStatement* statement, FB_BOOLEAN started, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_blr_compile(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceBLRStatement* statement, ISC_INT64 time_millis, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_blr_execute(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceBLRStatement* statement, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_dyn_execute(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceDYNRequest* request, ISC_INT64 time_millis, unsigned req_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_service_attach(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned att_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_service_start(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned switches_length, const char* switches, unsigned start_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_service_query(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned send_item_length, const unsigned char* send_items, unsigned recv_item_length, const unsigned char* recv_items, unsigned query_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_service_detach(struct fb_TracePlugin* self, struct fb_TraceServiceConnection* service, unsigned detach_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_event_error(struct fb_TracePlugin* self, struct fb_TraceConnection* connection, struct fb_TraceStatusVector* status, const char* function);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_event_sweep(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceSweepInfo* sweep, unsigned sweep_state);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_func_execute(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceFunction* function, FB_BOOLEAN started, unsigned func_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_dsql_restart(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTransaction* transaction, struct fb_TraceSQLStatement* statement, unsigned number);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_proc_compile(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceProcedure* procedure, ISC_INT64 time_millis, unsigned proc_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_func_compile(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceFunction* function, ISC_INT64 time_millis, unsigned func_result);
CLOOP_EXTERN_C FB_BOOLEAN fb_TracePlugin_trace_trigger_compile(struct fb_TracePlugin* self, struct fb_TraceDatabaseConnection* connection, struct fb_TraceTrigger* trigger, ISC_INT64 time_millis, unsigned trig_result);

#define fb_TraceFactory_VERSION 4

#define fb_TraceFactory_TRACE_EVENT_ATTACH ((unsigned) (0))
#define fb_TraceFactory_TRACE_EVENT_DETACH ((unsigned) (1))
#define fb_TraceFactory_TRACE_EVENT_TRANSACTION_START ((unsigned) (2))
#define fb_TraceFactory_TRACE_EVENT_TRANSACTION_END ((unsigned) (3))
#define fb_TraceFactory_TRACE_EVENT_SET_CONTEXT ((unsigned) (4))
#define fb_TraceFactory_TRACE_EVENT_PROC_EXECUTE ((unsigned) (5))
#define fb_TraceFactory_TRACE_EVENT_TRIGGER_EXECUTE ((unsigned) (6))
#define fb_TraceFactory_TRACE_EVENT_DSQL_PREPARE ((unsigned) (7))
#define fb_TraceFactory_TRACE_EVENT_DSQL_FREE ((unsigned) (8))
#define fb_TraceFactory_TRACE_EVENT_DSQL_EXECUTE ((unsigned) (9))
#define fb_TraceFactory_TRACE_EVENT_BLR_COMPILE ((unsigned) (10))
#define fb_TraceFactory_TRACE_EVENT_BLR_EXECUTE ((unsigned) (11))
#define fb_TraceFactory_TRACE_EVENT_DYN_EXECUTE ((unsigned) (12))
#define fb_TraceFactory_TRACE_EVENT_SERVICE_ATTACH ((unsigned) (13))
#define fb_TraceFactory_TRACE_EVENT_SERVICE_START ((unsigned) (14))
#define fb_TraceFactory_TRACE_EVENT_SERVICE_QUERY ((unsigned) (15))
#define fb_TraceFactory_TRACE_EVENT_SERVICE_DETACH ((unsigned) (16))
#define fb_TraceFactory_TRACE_EVENT_ERROR ((unsigned) (17))
#define fb_TraceFactory_TRACE_EVENT_SWEEP ((unsigned) (18))
#define fb_TraceFactory_TRACE_EVENT_FUNC_EXECUTE ((unsigned) (19))
#define fb_TraceFactory_TRACE_EVENT_PROC_COMPILE ((unsigned) (20))
#define fb_TraceFactory_TRACE_EVENT_FUNC_COMPILE ((unsigned) (21))
#define fb_TraceFactory_TRACE_EVENT_TRIGGER_COMPILE ((unsigned) (22))
#define fb_TraceFactory_TRACE_EVENT_MAX ((unsigned) (23))

struct fb_TraceFactory;

struct fb_TraceFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_TraceFactory* self);
	int (*release)(struct fb_TraceFactory* self);
	void (*setOwner)(struct fb_TraceFactory* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_TraceFactory* self);
	ISC_UINT64 (*trace_needs)(struct fb_TraceFactory* self);
	struct fb_TracePlugin* (*trace_create)(struct fb_TraceFactory* self, struct fb_Status* status, struct fb_TraceInitInfo* init_info);
};

struct fb_TraceFactory
{
	void* cloopDummy[1];
	struct fb_TraceFactoryVTable* vtable;
};

CLOOP_EXTERN_C void fb_TraceFactory_addRef(struct fb_TraceFactory* self);
CLOOP_EXTERN_C int fb_TraceFactory_release(struct fb_TraceFactory* self);
CLOOP_EXTERN_C void fb_TraceFactory_setOwner(struct fb_TraceFactory* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_TraceFactory_getOwner(struct fb_TraceFactory* self);
CLOOP_EXTERN_C ISC_UINT64 fb_TraceFactory_trace_needs(struct fb_TraceFactory* self);
CLOOP_EXTERN_C struct fb_TracePlugin* fb_TraceFactory_trace_create(struct fb_TraceFactory* self, struct fb_Status* status, struct fb_TraceInitInfo* init_info);

#define fb_UdrFunctionFactory_VERSION 3

struct fb_UdrFunctionFactory;

struct fb_UdrFunctionFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_UdrFunctionFactory* self);
	void (*setup)(struct fb_UdrFunctionFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
	struct fb_ExternalFunction* (*newItem)(struct fb_UdrFunctionFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata);
};

struct fb_UdrFunctionFactory
{
	void* cloopDummy[1];
	struct fb_UdrFunctionFactoryVTable* vtable;
};

CLOOP_EXTERN_C void fb_UdrFunctionFactory_dispose(struct fb_UdrFunctionFactory* self);
CLOOP_EXTERN_C void fb_UdrFunctionFactory_setup(struct fb_UdrFunctionFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct fb_ExternalFunction* fb_UdrFunctionFactory_newItem(struct fb_UdrFunctionFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata);

#define fb_UdrProcedureFactory_VERSION 3

struct fb_UdrProcedureFactory;

struct fb_UdrProcedureFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_UdrProcedureFactory* self);
	void (*setup)(struct fb_UdrProcedureFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
	struct fb_ExternalProcedure* (*newItem)(struct fb_UdrProcedureFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata);
};

struct fb_UdrProcedureFactory
{
	void* cloopDummy[1];
	struct fb_UdrProcedureFactoryVTable* vtable;
};

CLOOP_EXTERN_C void fb_UdrProcedureFactory_dispose(struct fb_UdrProcedureFactory* self);
CLOOP_EXTERN_C void fb_UdrProcedureFactory_setup(struct fb_UdrProcedureFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* inBuilder, struct fb_MetadataBuilder* outBuilder);
CLOOP_EXTERN_C struct fb_ExternalProcedure* fb_UdrProcedureFactory_newItem(struct fb_UdrProcedureFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata);

#define fb_UdrTriggerFactory_VERSION 3

struct fb_UdrTriggerFactory;

struct fb_UdrTriggerFactoryVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_UdrTriggerFactory* self);
	void (*setup)(struct fb_UdrTriggerFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* fieldsBuilder);
	struct fb_ExternalTrigger* (*newItem)(struct fb_UdrTriggerFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata);
};

struct fb_UdrTriggerFactory
{
	void* cloopDummy[1];
	struct fb_UdrTriggerFactoryVTable* vtable;
};

CLOOP_EXTERN_C void fb_UdrTriggerFactory_dispose(struct fb_UdrTriggerFactory* self);
CLOOP_EXTERN_C void fb_UdrTriggerFactory_setup(struct fb_UdrTriggerFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata, struct fb_MetadataBuilder* fieldsBuilder);
CLOOP_EXTERN_C struct fb_ExternalTrigger* fb_UdrTriggerFactory_newItem(struct fb_UdrTriggerFactory* self, struct fb_Status* status, struct fb_ExternalContext* context, struct fb_RoutineMetadata* metadata);

#define fb_UdrPlugin_VERSION 2

struct fb_UdrPlugin;

struct fb_UdrPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	struct fb_Master* (*getMaster)(struct fb_UdrPlugin* self);
	void (*registerFunction)(struct fb_UdrPlugin* self, struct fb_Status* status, const char* name, struct fb_UdrFunctionFactory* factory);
	void (*registerProcedure)(struct fb_UdrPlugin* self, struct fb_Status* status, const char* name, struct fb_UdrProcedureFactory* factory);
	void (*registerTrigger)(struct fb_UdrPlugin* self, struct fb_Status* status, const char* name, struct fb_UdrTriggerFactory* factory);
};

struct fb_UdrPlugin
{
	void* cloopDummy[1];
	struct fb_UdrPluginVTable* vtable;
};

CLOOP_EXTERN_C struct fb_Master* fb_UdrPlugin_getMaster(struct fb_UdrPlugin* self);
CLOOP_EXTERN_C void fb_UdrPlugin_registerFunction(struct fb_UdrPlugin* self, struct fb_Status* status, const char* name, struct fb_UdrFunctionFactory* factory);
CLOOP_EXTERN_C void fb_UdrPlugin_registerProcedure(struct fb_UdrPlugin* self, struct fb_Status* status, const char* name, struct fb_UdrProcedureFactory* factory);
CLOOP_EXTERN_C void fb_UdrPlugin_registerTrigger(struct fb_UdrPlugin* self, struct fb_Status* status, const char* name, struct fb_UdrTriggerFactory* factory);

#define fb_DecFloat16_VERSION 2

#define fb_DecFloat16_BCD_SIZE ((unsigned) (16))
#define fb_DecFloat16_STRING_SIZE ((unsigned) (24))

struct fb_DecFloat16;

struct fb_DecFloat16VTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*toBcd)(struct fb_DecFloat16* self, const FB_DEC16* from, int* sign, unsigned char* bcd, int* exp);
	void (*toString)(struct fb_DecFloat16* self, struct fb_Status* status, const FB_DEC16* from, unsigned bufferLength, char* buffer);
	void (*fromBcd)(struct fb_DecFloat16* self, int sign, const unsigned char* bcd, int exp, FB_DEC16* to);
	void (*fromString)(struct fb_DecFloat16* self, struct fb_Status* status, const char* from, FB_DEC16* to);
};

struct fb_DecFloat16
{
	void* cloopDummy[1];
	struct fb_DecFloat16VTable* vtable;
};

CLOOP_EXTERN_C void fb_DecFloat16_toBcd(struct fb_DecFloat16* self, const FB_DEC16* from, int* sign, unsigned char* bcd, int* exp);
CLOOP_EXTERN_C void fb_DecFloat16_toString(struct fb_DecFloat16* self, struct fb_Status* status, const FB_DEC16* from, unsigned bufferLength, char* buffer);
CLOOP_EXTERN_C void fb_DecFloat16_fromBcd(struct fb_DecFloat16* self, int sign, const unsigned char* bcd, int exp, FB_DEC16* to);
CLOOP_EXTERN_C void fb_DecFloat16_fromString(struct fb_DecFloat16* self, struct fb_Status* status, const char* from, FB_DEC16* to);

#define fb_DecFloat34_VERSION 2

#define fb_DecFloat34_BCD_SIZE ((unsigned) (34))
#define fb_DecFloat34_STRING_SIZE ((unsigned) (43))

struct fb_DecFloat34;

struct fb_DecFloat34VTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*toBcd)(struct fb_DecFloat34* self, const FB_DEC34* from, int* sign, unsigned char* bcd, int* exp);
	void (*toString)(struct fb_DecFloat34* self, struct fb_Status* status, const FB_DEC34* from, unsigned bufferLength, char* buffer);
	void (*fromBcd)(struct fb_DecFloat34* self, int sign, const unsigned char* bcd, int exp, FB_DEC34* to);
	void (*fromString)(struct fb_DecFloat34* self, struct fb_Status* status, const char* from, FB_DEC34* to);
};

struct fb_DecFloat34
{
	void* cloopDummy[1];
	struct fb_DecFloat34VTable* vtable;
};

CLOOP_EXTERN_C void fb_DecFloat34_toBcd(struct fb_DecFloat34* self, const FB_DEC34* from, int* sign, unsigned char* bcd, int* exp);
CLOOP_EXTERN_C void fb_DecFloat34_toString(struct fb_DecFloat34* self, struct fb_Status* status, const FB_DEC34* from, unsigned bufferLength, char* buffer);
CLOOP_EXTERN_C void fb_DecFloat34_fromBcd(struct fb_DecFloat34* self, int sign, const unsigned char* bcd, int exp, FB_DEC34* to);
CLOOP_EXTERN_C void fb_DecFloat34_fromString(struct fb_DecFloat34* self, struct fb_Status* status, const char* from, FB_DEC34* to);

#define fb_Int128_VERSION 2

#define fb_Int128_STRING_SIZE ((unsigned) (46))

struct fb_Int128;

struct fb_Int128VTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*toString)(struct fb_Int128* self, struct fb_Status* status, const FB_I128* from, int scale, unsigned bufferLength, char* buffer);
	void (*fromString)(struct fb_Int128* self, struct fb_Status* status, int scale, const char* from, FB_I128* to);
};

struct fb_Int128
{
	void* cloopDummy[1];
	struct fb_Int128VTable* vtable;
};

CLOOP_EXTERN_C void fb_Int128_toString(struct fb_Int128* self, struct fb_Status* status, const FB_I128* from, int scale, unsigned bufferLength, char* buffer);
CLOOP_EXTERN_C void fb_Int128_fromString(struct fb_Int128* self, struct fb_Status* status, int scale, const char* from, FB_I128* to);

#define fb_ReplicatedField_VERSION 2

struct fb_ReplicatedField;

struct fb_ReplicatedFieldVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	const char* (*getName)(struct fb_ReplicatedField* self);
	unsigned (*getType)(struct fb_ReplicatedField* self);
	int (*getSubType)(struct fb_ReplicatedField* self);
	int (*getScale)(struct fb_ReplicatedField* self);
	unsigned (*getLength)(struct fb_ReplicatedField* self);
	unsigned (*getCharSet)(struct fb_ReplicatedField* self);
	const void* (*getData)(struct fb_ReplicatedField* self);
};

struct fb_ReplicatedField
{
	void* cloopDummy[1];
	struct fb_ReplicatedFieldVTable* vtable;
};

CLOOP_EXTERN_C const char* fb_ReplicatedField_getName(struct fb_ReplicatedField* self);
CLOOP_EXTERN_C unsigned fb_ReplicatedField_getType(struct fb_ReplicatedField* self);
CLOOP_EXTERN_C int fb_ReplicatedField_getSubType(struct fb_ReplicatedField* self);
CLOOP_EXTERN_C int fb_ReplicatedField_getScale(struct fb_ReplicatedField* self);
CLOOP_EXTERN_C unsigned fb_ReplicatedField_getLength(struct fb_ReplicatedField* self);
CLOOP_EXTERN_C unsigned fb_ReplicatedField_getCharSet(struct fb_ReplicatedField* self);
CLOOP_EXTERN_C const void* fb_ReplicatedField_getData(struct fb_ReplicatedField* self);

#define fb_ReplicatedRecord_VERSION 2

struct fb_ReplicatedRecord;

struct fb_ReplicatedRecordVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	unsigned (*getCount)(struct fb_ReplicatedRecord* self);
	struct fb_ReplicatedField* (*getField)(struct fb_ReplicatedRecord* self, unsigned index);
	unsigned (*getRawLength)(struct fb_ReplicatedRecord* self);
	const unsigned char* (*getRawData)(struct fb_ReplicatedRecord* self);
};

struct fb_ReplicatedRecord
{
	void* cloopDummy[1];
	struct fb_ReplicatedRecordVTable* vtable;
};

CLOOP_EXTERN_C unsigned fb_ReplicatedRecord_getCount(struct fb_ReplicatedRecord* self);
CLOOP_EXTERN_C struct fb_ReplicatedField* fb_ReplicatedRecord_getField(struct fb_ReplicatedRecord* self, unsigned index);
CLOOP_EXTERN_C unsigned fb_ReplicatedRecord_getRawLength(struct fb_ReplicatedRecord* self);
CLOOP_EXTERN_C const unsigned char* fb_ReplicatedRecord_getRawData(struct fb_ReplicatedRecord* self);

#define fb_ReplicatedTransaction_VERSION 3

struct fb_ReplicatedTransaction;

struct fb_ReplicatedTransactionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_ReplicatedTransaction* self);
	void (*prepare)(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
	void (*commit)(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
	void (*rollback)(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
	void (*startSavepoint)(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
	void (*releaseSavepoint)(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
	void (*rollbackSavepoint)(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
	void (*insertRecord)(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* name, struct fb_ReplicatedRecord* record);
	void (*updateRecord)(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* name, struct fb_ReplicatedRecord* orgRecord, struct fb_ReplicatedRecord* newRecord);
	void (*deleteRecord)(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* name, struct fb_ReplicatedRecord* record);
	void (*executeSql)(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* sql);
	void (*executeSqlIntl)(struct fb_ReplicatedTransaction* self, struct fb_Status* status, unsigned charset, const char* sql);
};

struct fb_ReplicatedTransaction
{
	void* cloopDummy[1];
	struct fb_ReplicatedTransactionVTable* vtable;
};

CLOOP_EXTERN_C void fb_ReplicatedTransaction_dispose(struct fb_ReplicatedTransaction* self);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_prepare(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_commit(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_rollback(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_startSavepoint(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_releaseSavepoint(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_rollbackSavepoint(struct fb_ReplicatedTransaction* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_insertRecord(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* name, struct fb_ReplicatedRecord* record);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_updateRecord(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* name, struct fb_ReplicatedRecord* orgRecord, struct fb_ReplicatedRecord* newRecord);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_deleteRecord(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* name, struct fb_ReplicatedRecord* record);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_executeSql(struct fb_ReplicatedTransaction* self, struct fb_Status* status, const char* sql);
CLOOP_EXTERN_C void fb_ReplicatedTransaction_executeSqlIntl(struct fb_ReplicatedTransaction* self, struct fb_Status* status, unsigned charset, const char* sql);

#define fb_ReplicatedSession_VERSION 4

struct fb_ReplicatedSession;

struct fb_ReplicatedSessionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_ReplicatedSession* self);
	int (*release)(struct fb_ReplicatedSession* self);
	void (*setOwner)(struct fb_ReplicatedSession* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_ReplicatedSession* self);
	FB_BOOLEAN (*init)(struct fb_ReplicatedSession* self, struct fb_Status* status, struct fb_Attachment* attachment);
	struct fb_ReplicatedTransaction* (*startTransaction)(struct fb_ReplicatedSession* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_INT64 number);
	void (*cleanupTransaction)(struct fb_ReplicatedSession* self, struct fb_Status* status, ISC_INT64 number);
	void (*setSequence)(struct fb_ReplicatedSession* self, struct fb_Status* status, const char* name, ISC_INT64 value);
};

struct fb_ReplicatedSession
{
	void* cloopDummy[1];
	struct fb_ReplicatedSessionVTable* vtable;
};

CLOOP_EXTERN_C void fb_ReplicatedSession_addRef(struct fb_ReplicatedSession* self);
CLOOP_EXTERN_C int fb_ReplicatedSession_release(struct fb_ReplicatedSession* self);
CLOOP_EXTERN_C void fb_ReplicatedSession_setOwner(struct fb_ReplicatedSession* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_ReplicatedSession_getOwner(struct fb_ReplicatedSession* self);
CLOOP_EXTERN_C FB_BOOLEAN fb_ReplicatedSession_init(struct fb_ReplicatedSession* self, struct fb_Status* status, struct fb_Attachment* attachment);
CLOOP_EXTERN_C struct fb_ReplicatedTransaction* fb_ReplicatedSession_startTransaction(struct fb_ReplicatedSession* self, struct fb_Status* status, struct fb_Transaction* transaction, ISC_INT64 number);
CLOOP_EXTERN_C void fb_ReplicatedSession_cleanupTransaction(struct fb_ReplicatedSession* self, struct fb_Status* status, ISC_INT64 number);
CLOOP_EXTERN_C void fb_ReplicatedSession_setSequence(struct fb_ReplicatedSession* self, struct fb_Status* status, const char* name, ISC_INT64 value);

#define fb_ProfilerPlugin_VERSION 4

struct fb_ProfilerPlugin;

struct fb_ProfilerPluginVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*addRef)(struct fb_ProfilerPlugin* self);
	int (*release)(struct fb_ProfilerPlugin* self);
	void (*setOwner)(struct fb_ProfilerPlugin* self, struct fb_ReferenceCounted* r);
	struct fb_ReferenceCounted* (*getOwner)(struct fb_ProfilerPlugin* self);
	void (*init)(struct fb_ProfilerPlugin* self, struct fb_Status* status, struct fb_Attachment* attachment, ISC_UINT64 ticksFrequency);
	struct fb_ProfilerSession* (*startSession)(struct fb_ProfilerPlugin* self, struct fb_Status* status, const char* description, const char* options, ISC_TIMESTAMP_TZ timestamp);
	void (*flush)(struct fb_ProfilerPlugin* self, struct fb_Status* status);
};

struct fb_ProfilerPlugin
{
	void* cloopDummy[1];
	struct fb_ProfilerPluginVTable* vtable;
};

CLOOP_EXTERN_C void fb_ProfilerPlugin_addRef(struct fb_ProfilerPlugin* self);
CLOOP_EXTERN_C int fb_ProfilerPlugin_release(struct fb_ProfilerPlugin* self);
CLOOP_EXTERN_C void fb_ProfilerPlugin_setOwner(struct fb_ProfilerPlugin* self, struct fb_ReferenceCounted* r);
CLOOP_EXTERN_C struct fb_ReferenceCounted* fb_ProfilerPlugin_getOwner(struct fb_ProfilerPlugin* self);
CLOOP_EXTERN_C void fb_ProfilerPlugin_init(struct fb_ProfilerPlugin* self, struct fb_Status* status, struct fb_Attachment* attachment, ISC_UINT64 ticksFrequency);
CLOOP_EXTERN_C struct fb_ProfilerSession* fb_ProfilerPlugin_startSession(struct fb_ProfilerPlugin* self, struct fb_Status* status, const char* description, const char* options, ISC_TIMESTAMP_TZ timestamp);
CLOOP_EXTERN_C void fb_ProfilerPlugin_flush(struct fb_ProfilerPlugin* self, struct fb_Status* status);

#define fb_ProfilerSession_VERSION 3

#define fb_ProfilerSession_FLAG_BEFORE_EVENTS ((unsigned) (0x1))
#define fb_ProfilerSession_FLAG_AFTER_EVENTS ((unsigned) (0x2))

struct fb_ProfilerSession;

struct fb_ProfilerSessionVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	void (*dispose)(struct fb_ProfilerSession* self);
	ISC_INT64 (*getId)(struct fb_ProfilerSession* self);
	unsigned (*getFlags)(struct fb_ProfilerSession* self);
	void (*cancel)(struct fb_ProfilerSession* self, struct fb_Status* status);
	void (*finish)(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_TIMESTAMP_TZ timestamp);
	void (*defineStatement)(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_INT64 statementId, ISC_INT64 parentStatementId, const char* type, const char* packageName, const char* routineName, const char* sqlText);
	void (*defineCursor)(struct fb_ProfilerSession* self, ISC_INT64 statementId, unsigned cursorId, const char* name, unsigned line, unsigned column);
	void (*defineRecordSource)(struct fb_ProfilerSession* self, ISC_INT64 statementId, unsigned cursorId, unsigned recSourceId, unsigned level, const char* accessPath, unsigned parentRecSourceId);
	void (*onRequestStart)(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_INT64 statementId, ISC_INT64 requestId, ISC_INT64 callerStatementId, ISC_INT64 callerRequestId, ISC_TIMESTAMP_TZ timestamp);
	void (*onRequestFinish)(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_INT64 statementId, ISC_INT64 requestId, ISC_TIMESTAMP_TZ timestamp, struct fb_ProfilerStats* stats);
	void (*beforePsqlLineColumn)(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned line, unsigned column);
	void (*afterPsqlLineColumn)(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned line, unsigned column, struct fb_ProfilerStats* stats);
	void (*beforeRecordSourceOpen)(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId);
	void (*afterRecordSourceOpen)(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId, struct fb_ProfilerStats* stats);
	void (*beforeRecordSourceGetRecord)(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId);
	void (*afterRecordSourceGetRecord)(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId, struct fb_ProfilerStats* stats);
};

struct fb_ProfilerSession
{
	void* cloopDummy[1];
	struct fb_ProfilerSessionVTable* vtable;
};

CLOOP_EXTERN_C void fb_ProfilerSession_dispose(struct fb_ProfilerSession* self);
CLOOP_EXTERN_C ISC_INT64 fb_ProfilerSession_getId(struct fb_ProfilerSession* self);
CLOOP_EXTERN_C unsigned fb_ProfilerSession_getFlags(struct fb_ProfilerSession* self);
CLOOP_EXTERN_C void fb_ProfilerSession_cancel(struct fb_ProfilerSession* self, struct fb_Status* status);
CLOOP_EXTERN_C void fb_ProfilerSession_finish(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_TIMESTAMP_TZ timestamp);
CLOOP_EXTERN_C void fb_ProfilerSession_defineStatement(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_INT64 statementId, ISC_INT64 parentStatementId, const char* type, const char* packageName, const char* routineName, const char* sqlText);
CLOOP_EXTERN_C void fb_ProfilerSession_defineCursor(struct fb_ProfilerSession* self, ISC_INT64 statementId, unsigned cursorId, const char* name, unsigned line, unsigned column);
CLOOP_EXTERN_C void fb_ProfilerSession_defineRecordSource(struct fb_ProfilerSession* self, ISC_INT64 statementId, unsigned cursorId, unsigned recSourceId, unsigned level, const char* accessPath, unsigned parentRecSourceId);
CLOOP_EXTERN_C void fb_ProfilerSession_onRequestStart(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_INT64 statementId, ISC_INT64 requestId, ISC_INT64 callerStatementId, ISC_INT64 callerRequestId, ISC_TIMESTAMP_TZ timestamp);
CLOOP_EXTERN_C void fb_ProfilerSession_onRequestFinish(struct fb_ProfilerSession* self, struct fb_Status* status, ISC_INT64 statementId, ISC_INT64 requestId, ISC_TIMESTAMP_TZ timestamp, struct fb_ProfilerStats* stats);
CLOOP_EXTERN_C void fb_ProfilerSession_beforePsqlLineColumn(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned line, unsigned column);
CLOOP_EXTERN_C void fb_ProfilerSession_afterPsqlLineColumn(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned line, unsigned column, struct fb_ProfilerStats* stats);
CLOOP_EXTERN_C void fb_ProfilerSession_beforeRecordSourceOpen(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId);
CLOOP_EXTERN_C void fb_ProfilerSession_afterRecordSourceOpen(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId, struct fb_ProfilerStats* stats);
CLOOP_EXTERN_C void fb_ProfilerSession_beforeRecordSourceGetRecord(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId);
CLOOP_EXTERN_C void fb_ProfilerSession_afterRecordSourceGetRecord(struct fb_ProfilerSession* self, ISC_INT64 statementId, ISC_INT64 requestId, unsigned cursorId, unsigned recSourceId, struct fb_ProfilerStats* stats);

#define fb_ProfilerStats_VERSION 2

struct fb_ProfilerStats;

struct fb_ProfilerStatsVTable
{
	void* cloopDummy[1];
	uintptr_t version;
	ISC_UINT64 (*getElapsedTicks)(struct fb_ProfilerStats* self);
};

struct fb_ProfilerStats
{
	void* cloopDummy[1];
	struct fb_ProfilerStatsVTable* vtable;
};

CLOOP_EXTERN_C ISC_UINT64 fb_ProfilerStats_getElapsedTicks(struct fb_ProfilerStats* self);

CLOOP_EXTERN_C struct fb_Master* ISC_EXPORT fb_get_master_interface();

#endif	// FB_OOAPI_H
